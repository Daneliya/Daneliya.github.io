import{_ as s,c as i,o as e,ah as n,jX as t}from"./chunks/framework.D5cOWG0Y.js";const g=JSON.parse('{"title":"RabbitMQ日志追踪","description":"","frontmatter":{"title":"RabbitMQ日志追踪","tags":["消息队列","RabbitMQ"],"categories":["消息队列","RabbitMQ"]},"headers":[],"relativePath":"Java/架构设计/分布式/分布式消息队列/RabbitMQ/5_RabbitMQ日志追踪.md","filePath":"Java/架构设计/分布式/分布式消息队列/RabbitMQ/5_RabbitMQ日志追踪.md","lastUpdated":1755802517000}'),r={name:"Java/架构设计/分布式/分布式消息队列/RabbitMQ/5_RabbitMQ日志追踪.md"};function l(p,a,h,b,c,k){return e(),i("div",null,[...a[0]||(a[0]=[n(`<p>Trace 是Rabbitmq用于记录每一次发送的消息，方便使用Rabbitmq的开发者调试、排错。</p><h2 id="_1、启动tracing插件" tabindex="-1">1、启动Tracing插件 <a class="header-anchor" href="#_1、启动tracing插件" aria-label="Permalink to “1、启动Tracing插件”">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 进入rabbitMq中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 启动日志插件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmq-plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq_tracing</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 开启rabbitmq的tracing插件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmqctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> trace_on</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>开启了插件后，无需重启，rabbitMq管理界面就会出现Tracing项，可新建追踪。</p><h2 id="_2、新建trace" tabindex="-1">2、新建trace <a class="header-anchor" href="#_2、新建trace" aria-label="Permalink to “2、新建trace”">​</a></h2><p>新建trace时，JSON模式的数据会被Base64加密，不好观察，所以选择Text模式，同时可在Pattern中配置过滤条件</p><p><img src="`+t+`" alt="image-20241113103421842" loading="lazy"></p><h2 id="其他命令" tabindex="-1">其他命令 <a class="header-anchor" href="#其他命令" aria-label="Permalink to “其他命令”">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看打开的插件 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmq-plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭trace功能</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmqctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> trace_off</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止tracing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmq-plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq_tracing</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="trace消息跟踪显示乱码-谷歌如何修改字符编码" tabindex="-1">trace消息跟踪显示乱码（谷歌如何修改字符编码） <a class="header-anchor" href="#trace消息跟踪显示乱码-谷歌如何修改字符编码" aria-label="Permalink to “trace消息跟踪显示乱码（谷歌如何修改字符编码）”">​</a></h2><p>从github上下载最新的crx：https://<a href="https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">github</a>.com/jinliming2/Chrome-Charset/releases</p><p>选择谷歌设置–扩展程序，将crx拖入谷歌浏览器，确认即可。</p><p>选择插件修改编码格式为utf-8,问题解决。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to “参考资料”">​</a></h2><p><a href="https://blog.51cto.com/u_15002821/8984730" target="_blank" rel="noreferrer">https://blog.51cto.com/u_15002821/8984730</a></p><p><a href="https://blog.csdn.net/theconqueror/article/details/109177781" target="_blank" rel="noreferrer">https://blog.csdn.net/theconqueror/article/details/109177781</a></p><p><a href="https://blog.csdn.net/m0_59281987/article/details/131876259" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_59281987/article/details/131876259</a></p>`,17)])])}const o=s(r,[["render",l]]);export{g as __pageData,o as default};
