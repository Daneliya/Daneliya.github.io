import{_ as e,c as i,o as t,ah as n}from"./chunks/framework.D5cOWG0Y.js";const P=JSON.parse('{"title":"Pinpoint性能监控","description":"","frontmatter":{"title":"Pinpoint性能监控","tags":["分布式监控","Pinpoint"],"categories":["分布式监控","Pinpoint"]},"headers":[],"relativePath":"Java/架构设计/分布式/分布式监控/Pinpoint.md","filePath":"Java/架构设计/分布式/分布式监控/Pinpoint.md","lastUpdated":1755802517000}'),r={name:"Java/架构设计/分布式/分布式监控/Pinpoint.md"};function p(o,a,l,h,s,c){return t(),i("div",null,[...a[0]||(a[0]=[n('<h1 id="pinpoint" tabindex="-1">Pinpoint <a class="header-anchor" href="#pinpoint" aria-label="Permalink to “Pinpoint”">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to “概述”">​</a></h2><h3 id="_1-什么是pinpoint" tabindex="-1">1. 什么是Pinpoint？ <a class="header-anchor" href="#_1-什么是pinpoint" aria-label="Permalink to “1. 什么是Pinpoint？”">​</a></h3><p>Pinpoint是一个开源的应用性能监控工具，专为分布式应用程序而设计。它的目标是帮助开发人员和运维团队深入了解分布式系统中的事务流程和性能表现。Pinpoint跟踪并可视化事务的执行过程，以便用户能够识别问题并改进应用程序性能。</p><h3 id="_2-为什么需要pinpoint" tabindex="-1">2. 为什么需要Pinpoint？ <a class="header-anchor" href="#_2-为什么需要pinpoint" aria-label="Permalink to “2. 为什么需要Pinpoint？”">​</a></h3><p>在分布式系统中，一个应用通常由多个不同的组件组成，这些组件之间相互通信，有时还需要与外部服务进行API调用。如何监控这些组件之间的交互以及每个组件的性能变得非常关键。而Pinpoint的出现弥补了这一监控领域的不足，为开发人员和运维人员提供了一个强大的工具，帮助他们理解和改进分布式应用的性能。</p><h3 id="_3-pinpoint的主要特性" tabindex="-1">3. Pinpoint的主要特性 <a class="header-anchor" href="#_3-pinpoint的主要特性" aria-label="Permalink to “3. Pinpoint的主要特性”">​</a></h3><p>Pinpoint具有许多强大的特性，以下是一些主要功能：</p><h4 id="_3-1-服务器地图-servermap" tabindex="-1">3.1 服务器地图（ServerMap） <a class="header-anchor" href="#_3-1-服务器地图-servermap" aria-label="Permalink to “3.1 服务器地图（ServerMap）”">​</a></h4><p>Pinpoint通过ServerMap可视化展示组件之间的互联关系，帮助用户理解分布式系统的拓扑结构。用户可以单击节点以查看有关组件的详细信息，如当前状态和事务计数。这有助于快速识别问题所在。</p><h4 id="_3-2-实时活跃线程图表-realtime-active-thread-chart" tabindex="-1">3.2 实时活跃线程图表（Realtime Active Thread Chart） <a class="header-anchor" href="#_3-2-实时活跃线程图表-realtime-active-thread-chart" aria-label="Permalink to “3.2 实时活跃线程图表（Realtime Active Thread Chart）”">​</a></h4><p>Pinpoint能够实时监控应用程序内部的活跃线程。这有助于用户了解应用程序的并发情况，识别潜在的性能瓶颈。</p><h4 id="_3-3-请求-响应分布图表-request-response-scatter-chart" tabindex="-1">3.3 请求/响应分布图表（Request/Response Scatter Chart） <a class="header-anchor" href="#_3-3-请求-响应分布图表-request-response-scatter-chart" aria-label="Permalink to “3.3 请求/响应分布图表（Request/Response Scatter Chart）”">​</a></h4><p>Pinpoint可以可视化展示请求计数和响应模式的变化趋势。这有助于识别潜在的问题，并提供了更详细的信息以进行进一步的分析。</p><h4 id="_3-4-调用堆栈-callstack" tabindex="-1">3.4 调用堆栈（CallStack） <a class="header-anchor" href="#_3-4-调用堆栈-callstack" aria-label="Permalink to “3.4 调用堆栈（CallStack）”">​</a></h4><p>Pinpoint提供了代码级别的可视化，允许用户深入了解分布式环境中的每个事务。这有助于识别瓶颈和故障点，从而加速故障排除过程。</p><h4 id="_3-5-检查器-inspector" tabindex="-1">3.5 检查器（Inspector） <a class="header-anchor" href="#_3-5-检查器-inspector" aria-label="Permalink to “3.5 检查器（Inspector）”">​</a></h4><p>Pinpoint的Inspector功能允许用户查看有关应用程序的附加信息，如CPU使用率、内存和垃圾收集情况、每秒事务数（TPS）以及JVM参数。这些信息对于性能优化和故障排除非常有帮助。</p><h3 id="_4-如何使用pinpoint" tabindex="-1">4. 如何使用Pinpoint？ <a class="header-anchor" href="#_4-如何使用pinpoint" aria-label="Permalink to “4. 如何使用Pinpoint？”">​</a></h3><p>使用Pinpoint来监控分布式应用程序的性能是一个多步骤的过程。</p><h4 id="_4-1-安装pinpoint代理" tabindex="-1">4.1 安装Pinpoint代理 <a class="header-anchor" href="#_4-1-安装pinpoint代理" aria-label="Permalink to “4.1 安装Pinpoint代理”">​</a></h4><p>首先，您需要在应用程序的各个组件上安装Pinpoint代理。这些代理将负责收集性能数据并将其发送到Pinpoint服务器。</p><h4 id="_4-2-配置pinpoint服务器" tabindex="-1">4.2 配置Pinpoint服务器 <a class="header-anchor" href="#_4-2-配置pinpoint服务器" aria-label="Permalink to “4.2 配置Pinpoint服务器”">​</a></h4><p>您需要设置Pinpoint服务器以接收和存储从代理发送的性能数据。Pinpoint服务器将数据可视化并提供给用户。</p><h4 id="_4-3-监控和分析" tabindex="-1">4.3 监控和分析 <a class="header-anchor" href="#_4-3-监控和分析" aria-label="Permalink to “4.3 监控和分析”">​</a></h4><p>一旦Pinpoint代理和服务器都设置好了，您就可以开始监控分布式应用程序的性能。使用Pinpoint的各种功能来跟踪事务、识别性能问题并进行进一步的分析。</p><h4 id="_4-4-优化性能" tabindex="-1">4.4 优化性能 <a class="header-anchor" href="#_4-4-优化性能" aria-label="Permalink to “4.4 优化性能”">​</a></h4><p>根据Pinpoint提供的数据和分析结果，您可以采取必要的措施来优化应用程序的性能。这可能包括代码优化、资源调整或架构改进。</p><h3 id="_5-pinpoint的优势" tabindex="-1">5. Pinpoint的优势 <a class="header-anchor" href="#_5-pinpoint的优势" aria-label="Permalink to “5. Pinpoint的优势”">​</a></h3><p>Pinpoint作为一款开源工具，具有以下优势：</p><h4 id="_5-1-高度可定制性" tabindex="-1">5.1 高度可定制性 <a class="header-anchor" href="#_5-1-高度可定制性" aria-label="Permalink to “5.1 高度可定制性”">​</a></h4><p>Pinpoint是开源的，因此用户可以根据自己的需求进行定制。您可以创建自定义插件、规则和仪表板，以满足特定的监控需求。</p><h4 id="_5-2-社区支持" tabindex="-1">5.2 社区支持 <a class="header-anchor" href="#_5-2-社区支持" aria-label="Permalink to “5.2 社区支持”">​</a></h4><p>Pinpoint拥有活跃的开发和用户社区，用户可以在社区中获取支持、分享经验并获取更新和扩展。</p><h4 id="_5-3-商业友好的开源许可" tabindex="-1">5.3 商业友好的开源许可 <a class="header-anchor" href="#_5-3-商业友好的开源许可" aria-label="Permalink to “5.3 商业友好的开源许可”">​</a></h4><p>Pinpoint采用商业友好的开源许可，使其非常适合用于商业环境中。</p><h3 id="_6-快速安装" tabindex="-1">6. 快速安装 <a class="header-anchor" href="#_6-快速安装" aria-label="Permalink to “6. 快速安装”">​</a></h3><p>看了下最新的安装步骤，竟然有了windwos的安装部署，可以快速安装试用</p><p>可以访问如下路径：</p><p><strong><a href="https://pinpoint-apm.gitbook.io/pinpoint/getting-started/quickstart/quickstart.win.en" target="_blank" rel="noreferrer">https://pinpoint-apm.gitbook.io/pinpoint/getting-started/quickstart/quickstart.win.en</a></strong></p><p>github可以访问的直接到如下链接去下载就可以，目前支持windows</p><p><strong><a href="https://github.com/1Remote/1Remote/releases" target="_blank" rel="noreferrer">https://github.com/1Remote/1Remote/releases</a></strong></p><p>github如果无法访问的话，可以后台直接私信</p><h3 id="_7-总结" tabindex="-1">7. 总结 <a class="header-anchor" href="#_7-总结" aria-label="Permalink to “7. 总结”">​</a></h3><p>Pinpoint是一款强大的分布式应用性能监控工具，旨在帮助开发人员和运维团队深入了解分布式系统中的事务流程和性能表现。它提供了一系列功能，包括服务器地图、实时活跃线程图表、请求/响应分布图表、调用堆栈和检查器，使用户能够识别问题并优化应用程序性能。作为一款开源工具，Pinpoint具有高度可定制性、社区支持和商业友好的开源许可，适用于各种分布式应用监控场景。无论是开发人员还是运维团队，Pinpoint都是一个强大的工具，可帮助他们提升分布式应用的性能和可用性，提供卓越的用户体验。</p><p>参考资料</p><p>[1]. <a href="https://mp.weixin.qq.com/s/q1fFmwL1HqDNlY87FNLAfw" target="_blank" rel="noreferrer">大侠之运维 12.9k star，最强链路监控系统推荐，推荐</a></p><p>[2]. <a href="http://www.rainbond.net/docs/micro-service/tracking/pinpoint/" target="_blank" rel="noreferrer">http://www.rainbond.net/docs/micro-service/tracking/pinpoint/</a></p><p>[3]. <a href="https://blog.csdn.net/zhou920786312/article/details/131891599" target="_blank" rel="noreferrer">https://blog.csdn.net/zhou920786312/article/details/131891599</a></p><p>[4]. <a href="https://blog.csdn.net/weixin_43931358/article/details/107671436" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_43931358/article/details/107671436</a></p><p>[5]. <a href="https://blog.csdn.net/naoju8155/article/details/125857402" target="_blank" rel="noreferrer">https://blog.csdn.net/naoju8155/article/details/125857402</a></p><p>[6]. <a href="https://blog.csdn.net/omaidb/article/details/117453528" target="_blank" rel="noreferrer">https://blog.csdn.net/omaidb/article/details/117453528</a></p>',52)])])}const _=e(r,[["render",p]]);export{P as __pageData,_ as default};
