import{_ as o,c as a,o as e,ah as r,pq as s,pr as i,ps as m,pt as p,pu as n,pv as l,pw as f}from"./chunks/framework.D5cOWG0Y.js";const S=JSON.parse('{"title":"ComfyUI核心采样器","description":"","frontmatter":{"title":"ComfyUI核心采样器","date":"2024-02-27","tags":["Stable Diffusion","ComfyUI"],"categories":["Stable Diffusion","ComfyUI"]},"headers":[],"relativePath":"StableDiffusion/ComfyUI/3_ComfyUI核心采样器.md","filePath":"StableDiffusion/ComfyUI/3_ComfyUI核心采样器.md","lastUpdated":1756054686000}'),_={name:"StableDiffusion/ComfyUI/3_ComfyUI核心采样器.md"};function g(c,t,d,u,y,b){return e(),a("div",null,[...t[0]||(t[0]=[r('<p>在WebUI里，所看到的“采样方法”是一个单一的参数选项，但在Comfy UI 的核心采样器 KSampler 里，它会被“拆分”成两个单独的选项：<strong>Sampler Name（采样器名称）</strong> 与 <strong>Scheduler （调度器）</strong></p><p>SD WebUI 中的采样方法</p><p><img src="'+s+'" alt="image-20240226002008261" loading="lazy"></p><p>ComfyUI KSampler 中的相关选项</p><p><img src="'+i+'" alt="image-20240226001903135" loading="lazy"></p><p>回溯Stable Diffusion生成一张图片的“去噪过程”（参考Nenly同学的<a href="https://www.bilibili.com/video/BV1TK411v7Jw?t=285.4" target="_blank" rel="noreferrer">模型训练入门课里的相关内容</a>）：SD会经由随机种子生成一张随机噪声图，然后利用训练好的”噪声预测器“（U-Net），结合输入的提示词等“条件”（Conditioning），进行“条件去噪”，在这张噪声图上不断添加一些形象，使之成为一张生成的新图片。</p><p><img src="'+m+'" alt="image-20240226001903135" loading="lazy"></p><p>而广义的<strong>采样方法（Sampler）</strong>，即代表在控制这个“去噪”过程的一种算法。简单地去理解，不同的算法会给你带来不同的采样结果，而不同算法对于采样步数的要求也可能会有些许差异。</p><p><img src="'+p+'" alt="image-20240226001903135" loading="lazy"></p><p><img src="'+n+'" alt="image-20240226001903135" loading="lazy"></p><p>如果想更深入地挖掘这里面的技术原理，可以在<a href="https://www.reddit.com/r/StableDiffusion/comments/zgu6wd/comment/izkhkxc/?utm_source=share&amp;utm_medium=web2x&amp;context=3" target="_blank" rel="noreferrer">Reddit上的这一篇回答里</a>，找到由 <strong>@ManBearScientist</strong> 撰写的这一篇回答，非常专业地列举了所有采样方法的来源与含义，以及它们是如何一步步积累取得今天的研究成果的。</p><p><img src="'+l+'" alt="image-20240226003008371" loading="lazy"></p><p>那<strong>调度器（Scheduler）</strong> 呢？你可以把它看做是采样方法的一部分，主要用于控制采样过程中的时间步长。</p><p>大部分UI都会习惯将采样方法本身与调度器选项“合并”起来作为一种采样方法呈现给用户，但根据ComfyUI作者 <strong>@ComfyAnonymous</strong> 在<a href="https://github.com/comfyanonymous/ComfyUI/discussions/227" target="_blank" rel="noreferrer">这一个Issue中的答复</a>：我决定把它作为一个单独的选项，因为它对我来说更有意义。</p><p><img src="'+f+'" alt="image-20240226003008371" loading="lazy"></p><blockquote><p>这些是调度程序。它们定义采样器采样点的时间步长/西格玛。我决定将它们作为一个单独的选项，与其他 uis 不同，因为它对我来说更有意义。</p><p>在卡拉斯中，采样器花费的时间比正常时间更小的时间步长/西格玛。如果您想要与其他 uis 相同的行为，karras 和 normal 是您应该用于大多数采样器的行为。</p><p>Simple 只是我添加的一个，因为我尝试编写<a href="https://github.com/comfyanonymous/ComfyUI/blob/master/comfy/samplers.py#L233" target="_blank" rel="noreferrer">最简单的调度程序</a>，以便好玩，它实际上在某些情况下运行良好，例如 hiresfix 的第二遍，所以我包含它并将其命名为 simple。</p><p>ddim_uniform 是应该与 ddim 一起使用的那个，如果您希望它的行为与参考 Stable Diffusion 实现中的 ddim 采样器完全相同。</p></blockquote><p>根据他的建议，如果希望各种采样器能与其他UI中保持大致一样的行为，只需要使用<strong>Karras</strong>或<strong>Normal</strong>即可。</p>',17)])])}const U=o(_,[["render",g]]);export{S as __pageData,U as default};
