import{_ as a,c as i,o as n,ah as l,qO as e,qP as p,qQ as r,qR as t,qS as h,qT as k,qU as d,qV as g,qW as o,qX as c,qY as F,qZ as m,q_ as b,q$ as u,r0 as y,r1 as C,r2 as B,r3 as _,r4 as v,r5 as E,r6 as f,r7 as x,r8 as w,r9 as z,ra as P,rb as A}from"./chunks/framework.D5cOWG0Y.js";const M=JSON.parse('{"title":"IDEA+Linux远程开发","description":"","frontmatter":{"title":"IDEA+Linux远程开发","subSidebar":"auto","tags":["日常笔记"],"categories":["日常笔记"]},"headers":[],"relativePath":"daily/日常笔记/IDEA+Linux远程开发.md","filePath":"daily/日常笔记/IDEA+Linux远程开发.md","lastUpdated":1756054686000}'),D={name:"daily/日常笔记/IDEA+Linux远程开发.md"};function j(I,s,q,S,L,T){return n(),i("div",null,[...s[0]||(s[0]=[l('<p>远程环境：Ubuntu（Docker+JDK+maven） 本地：IDEA</p><h2 id="安装虚拟机" tabindex="-1">安装虚拟机 <a class="header-anchor" href="#安装虚拟机" aria-label="Permalink to “安装虚拟机”">​</a></h2><h3 id="vmware下载安装" tabindex="-1">VMware下载安装 <a class="header-anchor" href="#vmware下载安装" aria-label="Permalink to “VMware下载安装”">​</a></h3><p>VMware下载：<a href="https://www.vmware.com/cn/products/workstation-player.html" target="_blank" rel="noreferrer">https://www.vmware.com/cn/products/workstation-player.html</a> 下载，更改安装位置进行安装。 启动，选择免费试用，免费版足够满足大部分开发需求。 <img src="'+e+'" alt="image.png" loading="lazy"></p><h3 id="镜像下载" tabindex="-1">镜像下载 <a class="header-anchor" href="#镜像下载" aria-label="Permalink to “镜像下载”">​</a></h3><p>centos（已停止维护）：<a href="https://www.centos.org/download/" target="_blank" rel="noreferrer">https://www.centos.org/download/</a> 或 ubuntu：<a href="https://releases.ubuntu.com/" target="_blank" rel="noreferrer">https://releases.ubuntu.com/</a></p><p><img src="'+p+'" alt="image.png" loading="lazy"></p><p><img src="'+r+'" alt="image.png" loading="lazy"></p><h3 id="安装镜像" tabindex="-1">安装镜像 <a class="header-anchor" href="#安装镜像" aria-label="Permalink to “安装镜像”">​</a></h3><p>打开VMware，新建虚拟机，选择镜像文件。 <img src="'+t+'" alt="image.png" loading="lazy"> 指定虚拟机目录，建议直接在vmware安装目录下新建个目录安装。 <img src="'+h+'" alt="image.png" loading="lazy"> 设置给虚拟机分配的硬盘空间大小。 <img src="'+k+'" alt="image.png" loading="lazy"> 根据实际自定义硬件，点击完成。 <img src="'+d+`" alt="image.png" loading="lazy"> 等待安装完成。☕</p><p>更改分辨率：按下win键，输入 <strong>resolution</strong> ，设置为 200%。 更改系统语言：按下win键，输入 <strong>language</strong>，安装语言支持，安装字体，在字体列表拖到第一位，**apply system wide **全局应用，重启生效。 中文输入法：按下win键，输入 <strong>language</strong>，区域和语言，添加输入源，选择汉语，删掉英语，安装后shift切换中英文。 更改时区：按下win键，输入 <strong>time</strong>，选择上海。</p><p>软件安装 1、ubuntu应用商店。 2、终端命令行（快捷键 Ctrl+Alt+T，ubuntu默认安装有apt软件包管理器）。</p><p>docker安装</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker安装</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可以加-y不再询问</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker.io</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ctrl+R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 清屏</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看docker版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 执行远程镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="远程开发准备" tabindex="-1">远程开发准备 <a class="header-anchor" href="#远程开发准备" aria-label="Permalink to “远程开发准备”">​</a></h2><p>远程开发，在本地Win上操作Linux服务器开发 方式一：远程部署 方式二：纯远程开发</p><h3 id="保证网络连通" tabindex="-1">保证网络连通 <a class="header-anchor" href="#保证网络连通" aria-label="Permalink to “保证网络连通”">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看ip，第一次使用根据提示进行安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifconfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装网络查看工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> net-tools</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看ip <img src="`+g+'" alt="image.png" loading="lazy"> win上测试是否连通 <img src="'+o+`" alt="image.png" loading="lazy"></p><h3 id="安装ssh支持" tabindex="-1">安装ssh支持 <a class="header-anchor" href="#安装ssh支持" aria-label="Permalink to “安装ssh支持”">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装ssh支持</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看ssh服务是否开启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="安装java环境" tabindex="-1">安装java环境 <a class="header-anchor" href="#安装java环境" aria-label="Permalink to “安装java环境”">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 更新软件包信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装jdk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-11-jdk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看java版本是否安装成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装依赖管理工具maven</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maven</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看maven版本是否安装成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="远程部署" tabindex="-1">远程部署 <a class="header-anchor" href="#远程部署" aria-label="Permalink to “远程部署”">​</a></h2><p>在本地电脑写代码开发，通过文件同步等方式把代码同步到远程Linux服务器。 启动项目时，用本地电脑连接远程Linux服务器，通过远程执行命令的方式来编译代码，运行代码。 远程开发6个阶段：编写代码、文件同步、代码运行、编译构建、部署调试。</p><p><img src="`+c+'" alt="image.png" loading="lazy"></p><h3 id="idea配置" tabindex="-1">IDEA配置 <a class="header-anchor" href="#idea配置" aria-label="Permalink to “IDEA配置”">​</a></h3><p>建立一个简单地springboot测试项目 <img src="'+F+'" alt="image.png" loading="lazy"> 配置文件同步 <img src="'+m+'" alt="image.png" loading="lazy"> 添加sftp配置，配置ssh地址 <img src="'+b+'" alt="image.png" loading="lazy"> 配置文件映射 <img src="'+u+'" alt="image.png" loading="lazy"> 项目上右键部署 <img src="'+y+'" alt="image.png" loading="lazy"></p><p><img src="'+C+'" alt="image.png" loading="lazy"> 在Linux上进入映射目录查看是否同步成功。 如果嫌每次手动同步麻烦，可以开启自动同步 <img src="'+B+'" alt="image.png" loading="lazy"> 选项options中可以配置不弹框提示删除 <img src="'+_+'" alt="image.png" loading="lazy"></p><h3 id="远程运行" tabindex="-1">远程运行 <a class="header-anchor" href="#远程运行" aria-label="Permalink to “远程运行”">​</a></h3><p>进入IDEA终端，连接远程服务器 <img src="'+v+`" alt="image.png" loading="lazy"></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 进入代码目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 使用maven运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spring-boot:run</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>等待依赖下载启动☕，访问接口地址测试 <a href="http://192.168.64.128:8080/helloUbuntu" target="_blank" rel="noreferrer">http://192.168.64.128:8080/helloUbuntu</a></p><h3 id="远程部署-1" tabindex="-1">远程部署 <a class="header-anchor" href="#远程部署-1" aria-label="Permalink to “远程部署”">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/xxl/code/target/xxl-ubuntu-springboot-0.0.1-SNAPSHOT.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --spring.profiles.active=prod</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="远程调试" tabindex="-1">远程调试 <a class="header-anchor" href="#远程调试" aria-label="Permalink to “远程调试”">​</a></h3><p>IDEA增加远程JVM调试配置 <img src="`+E+'" alt="image.png" loading="lazy"> 项目启动时增加命令行参数</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:5005</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/xxl/code/target/xxl-ubuntu-springboot-0.0.1-SNAPSHOT.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --spring.profiles.active=prod</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>IDEA启动debug，断点即可调试。</p><h2 id="纯远程开发" tabindex="-1">纯远程开发 <a class="header-anchor" href="#纯远程开发" aria-label="Permalink to “纯远程开发”">​</a></h2><p>本地只提供开发界面，代码等都在服务器上。 <img src="'+f+'" alt="image.png" loading="lazy"> IDEA进入入口页面，新建ssh连接 <img src="'+x+'" alt="image.png" loading="lazy"> 此方式对服务器内存有一定要求。 <img src="'+w+'" alt="image.png" loading="lazy"><img src="'+z+'" alt="image.png" loading="lazy"> 打开项目后启动。 启动时可能会报执行错误，需要在setting-compiler-vm option中增加参数 -Djdk.lang.Process.launchMechanism=vfork <img src="'+P+'" alt="image.png" loading="lazy"> 设置转发端口，即可直接访问本地地址。 <img src="'+A+'" alt="image.png" loading="lazy"></p>',41)])])}const N=a(D,[["render",j]]);export{M as __pageData,N as default};
