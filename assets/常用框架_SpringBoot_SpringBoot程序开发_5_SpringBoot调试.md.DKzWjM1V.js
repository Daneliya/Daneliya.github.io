import{_ as i,c as a,o as n,ah as t}from"./chunks/framework.D5cOWG0Y.js";const g=JSON.parse('{"title":"SpringBoot调试","description":"","frontmatter":{"title":"SpringBoot调试","tags":["SpringBoot","源码"],"categories":["SpringBoot"]},"headers":[],"relativePath":"常用框架/SpringBoot/SpringBoot程序开发/5_SpringBoot调试.md","filePath":"常用框架/SpringBoot/SpringBoot程序开发/5_SpringBoot调试.md","lastUpdated":1756054686000}'),p={name:"常用框架/SpringBoot/SpringBoot程序开发/5_SpringBoot调试.md"};function l(e,s,r,h,k,E){return n(),a("div",null,[...s[0]||(s[0]=[t(`<p>在项目开发的过程中经常需要对代码进行反复修改，这样就会导致SpringBoot运行容器反复启动。为了解决这种频繁重启问题，SpringBoot提供了自动加载配置的依赖库，以实现代码的动态加载。</p><p>修改pom.xml配置文件，追加自动加载依赖库配置。</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- SpringBoot调试 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.springframework&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;springloaded&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.2.8.RELEASE&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;spring-boot-devtools&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>每当用户修改项目中程序类的时候都会由SpringBoot自动加载更新后的程序代码</p><p>但是需要注意的是</p><p>如果报错：SpringbootInitApplication: delete method not implemented SpringbootInitApplication: 虚拟机不支持的操作</p><p><strong>是因为HotSwap只支持对方法body的修改，不支持对类和方法签名的修改（比如修改类名，方法名，方法参数，添加或者删除一个方法，增加、删除类文件等，是不能够热部署到服务上的。这时候需要停止服务器重新部署后再启动，就不会出现上面的提示了等</strong></p><p><a href="https://blog.csdn.net/Maxiao1204/article/details/103203515" target="_blank" rel="noreferrer">https://blog.csdn.net/Maxiao1204/article/details/103203515</a></p><p><a href="https://cloud.tencent.com/developer/article/1542394" target="_blank" rel="noreferrer">Idea环境实现SpringBoot实现两种热部署方式（亲测有效）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>`,9)])])}const d=i(p,[["render",l]]);export{g as __pageData,d as default};
