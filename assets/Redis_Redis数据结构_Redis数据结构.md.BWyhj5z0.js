import{_ as i,c as a,o as n,ah as e,oL as l}from"./chunks/framework.D5cOWG0Y.js";const F=JSON.parse('{"title":"Redis数据结构","description":"","frontmatter":{"title":"Redis数据结构","tags":["Redis"],"categories":["Redis"]},"headers":[],"relativePath":"Redis/Redis数据结构/Redis数据结构.md","filePath":"Redis/Redis数据结构/Redis数据结构.md","lastUpdated":1756054686000}'),t={name:"Redis/Redis数据结构/Redis数据结构.md"};function h(p,s,r,k,d,c){return n(),a("div",null,[...s[0]||(s[0]=[e('<h2 id="一、redis数据结构介绍" tabindex="-1">一、Redis<a href="https://so.csdn.net/so/search?spm=a2c6h.13046898.publish-article.41.3eaf6ffaRQROo8&amp;q=%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" target="_blank" rel="noreferrer">数据结构</a>介绍 <a class="header-anchor" href="#一、redis数据结构介绍" aria-label="Permalink to “一、Redis数据结构介绍”">​</a></h2><p>Redis是一个key-value的数据库，key一般是String类型，value的类型可以是多种。</p><p>可以在Redis的官方网站上查看一些命令，<a href="https://redis.io/commands" target="_blank" rel="noreferrer">https://redis.io/commands</a></p><p><img src="'+l+`" alt="image-20240603221115734" loading="lazy"></p><p>也可以在控制台上通过help命令查看</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 登录redis后台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看帮助</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @generic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Redis 主要支持以下几种数据类型：</p><ul><li><strong>string（字符串）:</strong> 基本的数据存储单元，可以存储字符串、整数或者浮点数。</li><li><strong>hash（哈希）:</strong> 一个键值对集合，可以存储多个字段。</li><li><strong>list（列表）:</strong> 一个简单的列表，可以存储一系列的字符串元素。</li><li><strong>set（集合）:</strong> 一个无序集合，可以存储不重复的字符串元素。</li><li><strong>zset（sorted set：有序集合）：</strong> 类似于集合，但是每个元素都有一个分数（score）与之关联。</li><li><strong>位图（Bitmaps）：</strong> 基于字符串类型，可以对每个位进行操作。</li><li><strong>超日志（HyperLogLogs）：</strong> 用于基数统计，可以估算集合中的唯一元素数量。</li><li><strong>地理空间（Geospatial）：</strong> 用于存储地理位置信息。</li><li><strong>发布/订阅（Pub/Sub）：</strong> 一种消息通信模式，允许客户端订阅消息通道，并接收发布到该通道的消息。</li><li><strong>流（Streams）：</strong> 用于消息队列和日志存储，支持消息的持久化和时间排序。</li><li><strong>模块（Modules）：</strong> Redis 支持动态加载模块，可以扩展 Redis 的功能。</li></ul><h2 id="二、redis通用命令" tabindex="-1">二、Redis通用命令 <a class="header-anchor" href="#二、redis通用命令" aria-label="Permalink to “二、Redis通用命令”">​</a></h2><p>通用命令是部分数据类型的，都可以使用的类型，常见的有：</p><h3 id="keys" tabindex="-1">KEYS <a class="header-anchor" href="#keys" aria-label="Permalink to “KEYS”">​</a></h3><p><code>KEYS</code>：查看符合模板的所以key ,<strong>不建议在生产环境设备上使用</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keys</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  KEYS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pattern</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  summary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keys</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> matching</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> given</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pattern</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  since:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  group:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">keys</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:stock:id:10003&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:id:10004&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:id:10003&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:stock:id:10005&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:stock:id:10001&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:stock:id:10002&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:id:10005&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:id:10002&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:stock:id:10004&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item:id:10001&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;login:3&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="del" tabindex="-1">DEL <a class="header-anchor" href="#del" aria-label="Permalink to “DEL”">​</a></h3><p><code>DEL</code>：删除一个指定的key</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  DEL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  summary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  since:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  group:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MSET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DEL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">KEYS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;k3&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="exists" tabindex="-1">EXISTS <a class="header-anchor" href="#exists" aria-label="Permalink to “EXISTS”">​</a></h3><p><code>EXISTS</code>:判断一个key是否存在</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exists</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  summary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Determine</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exists</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  since:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  group:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exists</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="expire" tabindex="-1">EXPIRE <a class="header-anchor" href="#expire" aria-label="Permalink to “EXPIRE”">​</a></h3><p><code>EXPIRE</code>:给一个key设置一个有效期，有效期到期时key自动被删除</p><h3 id="ttl" tabindex="-1">TTL <a class="header-anchor" href="#ttl" aria-label="Permalink to “TTL”">​</a></h3><p><code>TTL</code>：查看一个key的剩余有效期</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expire</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  EXPIRE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  summary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key&#39;s time to live in seconds</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  since: 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  group: generic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; expire k3 20</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(integer) 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; help ttl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  TTL key</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  summary: Get the time to live for a key</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  since: 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  group: generic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; ttl k3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(integer) 16</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; ttl k3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(integer) 9</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; ttl k3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(integer) 3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:6379&gt; ttl k3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(integer) -2 # 有效期结束</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="三、string类型" tabindex="-1">三、String类型 <a class="header-anchor" href="#三、string类型" aria-label="Permalink to “三、String类型”">​</a></h2><h3 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to “特点”">​</a></h3><ul><li><p>String类型，也就是字符串类型，是Redis中最简单的存储类型</p></li><li><p>其value是字符串，不过根据字符串的格式不同，又可以分为3类：</p></li><li><ul><li>String：普通字符串</li><li>int：整数类型，可以做自增、自减操作</li><li>float：浮点类型，可以做自增、自减操作</li></ul></li><li><p>不管是哪种格式，底层都是字节数组形式存储，只不过是编码方式不同，字符串类型的最大空间不能超过512M</p></li><li><p>可以存储字符串或整数值，支持原子性的增减操作（incr/decr）。</p></li></ul><table tabindex="0"><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>msg</td><td>hello world</td></tr><tr><td>num</td><td>10</td></tr><tr><td>score</td><td>99.5</td></tr></tbody></table><h3 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to “适用场景”">​</a></h3><p>单个值的缓存，计数器（如网页访问次数），简单的KV存储。</p><h3 id="string常见的命令" tabindex="-1">String常见的命令 <a class="header-anchor" href="#string常见的命令" aria-label="Permalink to “String常见的命令”">​</a></h3><ul><li><ul><li><code>SET</code>：添加或者修改已经存在的一个String类型的键值对</li><li><code>GET</code>：根据key获得String类型的value</li><li><code>MSET</code>：批量添加多个String类型的键值对</li><li><code>MGET</code>：根据多个key获取多个String类型的value</li><li><code>INCR</code>：让一个整型的key自增1</li><li><code>INCRBY</code>：让一个整型的key自增并指定步长，例如：<code>incrby num 2</code> 表示让num值自增2</li><li><code>INCRBYFLOAT</code>：让一个浮点类型的数字自增并指定步长</li><li><code>SETNX</code>：添加一个String类型的键值对，前提是这个key不存在，否则不执行</li><li><code>SETEX</code>：添加一个String类型的键值对，并且指定有效期</li></ul></li></ul><h2 id="四、hash类型" tabindex="-1">四、Hash类型 <a class="header-anchor" href="#四、hash类型" aria-label="Permalink to “四、Hash类型”">​</a></h2><h3 id="特点-1" tabindex="-1">特点 <a class="header-anchor" href="#特点-1" aria-label="Permalink to “特点”">​</a></h3><ul><li>Hash类型，也叫散列，其value是一个无序字典，类似于Java中的HashMap结构</li><li>String结构是将对象序列化为JSON字符串后存储，当需要修改对象某个字段时很不方便，Hash结构可以将对象中的<strong>每个字段独立存储</strong>，可以针对单个字段做CRUD</li></ul><h3 id="适用场景-1" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景-1" aria-label="Permalink to “适用场景”">​</a></h3><p>当一个实体拥有多个属性且这些属性都需要存储时，如用户信息、商品详情等。</p><h3 id="hash类型的常见命令" tabindex="-1">Hash类型的常见命令 <a class="header-anchor" href="#hash类型的常见命令" aria-label="Permalink to “Hash类型的常见命令”">​</a></h3><ul><li><code>HSET key field value</code>：添加或者修改hash类型key的field的值</li><li><code>HGET key field</code>：获取一个hash类型key的field的值</li><li><code>HMSET</code>：批量添加多个hash类型key的field的值</li><li><code>HMGET</code>：批量获取多个hash类型key的field的值</li><li><code>HMGETALL</code>：获取一个hash类型的key中的所有field和value</li><li><code>HKEYS</code>：获取一个hash类型的key中的所有field</li><li><code>HVALS</code>：获取一个hash类型的key中的所有value</li><li><code>HINCRBY</code>：染一个hash类型key的字段值自增并指定步长</li><li><code>HSETNX</code>：添加一个hash类型的key的field值，前提是这个field不存在，否则不执行</li></ul><h2 id="五、list类型" tabindex="-1">五、List类型 <a class="header-anchor" href="#五、list类型" aria-label="Permalink to “五、List类型”">​</a></h2><h3 id="特点-2" tabindex="-1">特点 <a class="header-anchor" href="#特点-2" aria-label="Permalink to “特点”">​</a></h3><ul><li><p>Redis中的List类型与Java中的LinkedList类似，可以看成是一个<strong>双向链表</strong>结构，既可以支持正向检索也可以支持反向检索，支持在头部或尾部进行快速插入和删除操作。</p></li><li><p>特征也与LinkedList类似：</p></li><li><ul><li>有序</li><li>元素可以重复</li><li>插入和删除快</li><li>查询速度一般</li></ul></li><li><p>常用来存储一些有序数据</p></li></ul><h3 id="适用场景-2" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景-2" aria-label="Permalink to “适用场景”">​</a></h3><p>实现简单的队列或栈，如消息队列、最新评论列表。</p><h3 id="list类型的常见命令" tabindex="-1">List类型的常见命令 <a class="header-anchor" href="#list类型的常见命令" aria-label="Permalink to “List类型的常见命令”">​</a></h3><ul><li><code>LPUSH key element...</code>：向列表左侧插入一个或多个元素</li><li><code>LPOP key</code>：移除并返回列表左侧第一个元素，没有则返回nil</li><li><code>RPUSH key element...</code>：向列表右侧插入一个或多个元素</li><li><code>RPOP key</code>：移除并返回列表右侧的第一个元素</li><li><code>LRANGE key star end</code>：返回一段角标范围内的所有元素</li><li><code>BLPOP</code>和<code>BRPOP</code>：与<code>LPOP</code>和<code>RPOP</code>类似，只不过在没有元素时等待指定时间，而不是直接返回nil</li></ul><h2 id="六、set类型" tabindex="-1">六、Set类型 <a class="header-anchor" href="#六、set类型" aria-label="Permalink to “六、Set类型”">​</a></h2><h3 id="特点-3" tabindex="-1">特点 <a class="header-anchor" href="#特点-3" aria-label="Permalink to “特点”">​</a></h3><ul><li><p>Redis的Set结构与Java中的HashSet类似，可以看做是一个value为null的HashMap，因为也是一个hash表，因此具备与HashSet类似的特征：</p></li><li><ul><li>无序</li><li>元素不可重复</li><li>查找快</li><li>支持交集、并集、差集等功能</li></ul></li></ul><h3 id="适用场景-3" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景-3" aria-label="Permalink to “适用场景”">​</a></h3><p>去重操作，如关注列表、标签系统。</p><h3 id="set类型的常见命令" tabindex="-1">Set类型的常见命令 <a class="header-anchor" href="#set类型的常见命令" aria-label="Permalink to “Set类型的常见命令”">​</a></h3><ul><li><code>SADD key member...</code>：向set中添加一个或多个元素</li><li><code>SREM key member...</code>：移除set中的指定元素</li><li><code>SCARD key</code>：返回set中元素的个数</li><li><code>SISMEMBER key member</code>：判断衣一个元素是否存在于set中</li><li><code>SMEMBERS</code>：获取set中的所有元素</li><li><code>SINTER key1 key2...</code>：求key1与key2的交集</li><li><code>SDIFF key1 key2..</code>.：求key1与key2的差集</li><li><code>SUNION key1 key2...</code>：求key1与key2的并集</li></ul><h2 id="七、sortedset类型" tabindex="-1">七、SortedSet类型 <a class="header-anchor" href="#七、sortedset类型" aria-label="Permalink to “七、SortedSet类型”">​</a></h2><h3 id="特点-4" tabindex="-1">特点 <a class="header-anchor" href="#特点-4" aria-label="Permalink to “特点”">​</a></h3><ul><li><p>Redis的SortedSet是一个可排序的set集合，与Java中的TreeSet有些类似，但是底层数据结构却差别很大，SortedSet中的每个元素都带有一个score属性，可以基于score属性对元素排序，底层的实现是一个跳表（SkipList）加hash表</p></li><li><p>SortedSet有以下特性：</p></li><li><ul><li>可排序</li><li>元素不重复</li><li>查询速度快</li></ul></li></ul><h3 id="适用场景-4" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景-4" aria-label="Permalink to “适用场景”">​</a></h3><p>因为SortedSet的可排序性，经常用来实现排行榜这样的功能。</p><h3 id="sortedset类型的常见命令" tabindex="-1">SortedSet类型的常见命令 <a class="header-anchor" href="#sortedset类型的常见命令" aria-label="Permalink to “SortedSet类型的常见命令”">​</a></h3><ul><li><code>ZADD key member</code>：添加一个或多个元素到sorted set ，如果已经存在则更新其score值</li><li><code>ZREM key member</code>：删除sorted set中的一个指定元素</li><li><code>ZSCORE key member</code>：获取sorted set中的指定元素的score值</li><li><code>ZRANK key member</code>：获取sorted set中的指定元素排名</li><li><code>ZCARD key</code>：获取sorted set中的元素个数</li><li><code>ZCOUNT key min max</code>：统计score值在给定的范围内所有元素的个数</li><li><code>ZINCRBY key increment member</code> ：让sorted set中的指定元素自增，步长为指定的increment值</li><li><code>ZRANGE key min max</code> ：按照score排序后，获取指定排名范围内的元素</li><li><code>ZRANGEBYSCORE key min max</code>：按照score排序后，获取指定score范围内的元素</li><li><code>ZDIFF</code>、<code>ZINTER</code>、<code>ZUNION</code>：求差集、交集、并集</li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to “参考资料”">​</a></h2><p><a href="https://www.runoob.com/redis/redis-data-types.html" target="_blank" rel="noreferrer">https://www.runoob.com/redis/redis-data-types.html</a></p><p><a href="https://developer.aliyun.com/article/1518145" target="_blank" rel="noreferrer">https://developer.aliyun.com/article/1518145</a></p><p><a href="https://developer.aliyun.com/article/1505666" target="_blank" rel="noreferrer">https://developer.aliyun.com/article/1505666</a></p>`,64)])])}const g=i(t,[["render",h]]);export{F as __pageData,g as default};
