import{_ as s,c as n,o as e,ah as i}from"./chunks/framework.D5cOWG0Y.js";const h=JSON.parse('{"title":"Canal","description":"","frontmatter":{"title":"Canal","tags":["数据同步"],"categories":["数据同步"]},"headers":[],"relativePath":"Java/解决方案/数据同步/1_Canal.md","filePath":"Java/解决方案/数据同步/1_Canal.md","lastUpdated":1755802517000}'),l={name:"Java/解决方案/数据同步/1_Canal.md"};function p(t,a,r,c,o,d){return e(),n("div",null,[...a[0]||(a[0]=[i(`<p><a href="https://github.com/alibaba/canal/wiki" target="_blank" rel="noreferrer">https://github.com/alibaba/canal/wiki</a></p><h2 id="canal" tabindex="-1">Canal <a class="header-anchor" href="#canal" aria-label="Permalink to “Canal”">​</a></h2><blockquote><p>官方文档：<a href="https://github.com/alibaba/canal/wiki/QuickStart" target="_blank" rel="noreferrer">https://github.com/alibaba/canal/wiki/QuickStart</a></p><p>下载版本：<a href="https://github.com/alibaba/canal/releases/download/canal-1.1.8/canal.deployer-1.1.8.tar.gz" target="_blank" rel="noreferrer">canal.deployer-1.1.8.tar.gz</a></p></blockquote><h3 id="mysql-开启-binlog" tabindex="-1">MySQL 开启 Binlog <a class="header-anchor" href="#mysql-开启-binlog" aria-label="Permalink to “MySQL 开启 Binlog”">​</a></h3><p>MySQL 的 Binlog（二进制日志）记录了所有对数据库进行更改的操作，是实现主从复制和数据恢复的重要工具。以下是开启 Binlog 的步骤：</p><p><strong>1、修改配置文件</strong></p><p>打开 MySQL 配置文件（通常位于 <code>/etc/my.cnf</code> 或 <code>/etc/mysql/my.cnf</code>）。</p><p>在 <em>[mysqld]</em> 部分添加以下内容</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>[mysqld]</span></span>
<span class="line"><span>log-bin=mysql-bin # 开启 binlog</span></span>
<span class="line"><span>binlog-format=ROW # 选择 ROW 模式</span></span>
<span class="line"><span>server_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>2、重启 MySQL 服务</strong></p><p>保存配置后，重启 MySQL 服务以使更改生效：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>sudo service mysql restart</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>3、验证 Binlog 是否开启</strong></p><p>登录 MySQL，执行以下命令检查 Binlog 状态：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>SHOW VARIABLES LIKE &#39;log_bin&#39;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果返回值为 <em>ON</em>，表示 Binlog 已成功开启。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>mysql&gt; SHOW VARIABLES LIKE &#39;log_bin&#39;;</span></span>
<span class="line"><span>+---------------+-------+</span></span>
<span class="line"><span>| Variable_name | Value |</span></span>
<span class="line"><span>+---------------+-------+</span></span>
<span class="line"><span>| log_bin       | ON    |</span></span>
<span class="line"><span>+---------------+-------+</span></span>
<span class="line"><span>1 row in set (0.02 sec)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>常用命令</strong></p><p>查看所有 Binlog 文件：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>SHOW MASTER LOGS;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看当前 Binlog 状态：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>SHOW MASTER STATUS;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>手动刷新生成新日志文件：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>FLUSH LOGS;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>注意事项</strong></p><ol><li><strong>Binlog 格式选择</strong>： STATEMENT：基于 SQL 语句，性能较高，但可能导致主从数据不一致。 ROW：基于行的复制，日志更大，但更可靠。 MIXED：结合两者优点，推荐使用。</li><li><strong>权限问题</strong>：确保配置的日志路径有 MySQL 用户的写入权限。</li></ol><h2 id="canal-admin管理页面" tabindex="-1">Canal Admin管理页面 <a class="header-anchor" href="#canal-admin管理页面" aria-label="Permalink to “Canal Admin管理页面”">​</a></h2><blockquote><p>官方文档：<a href="https://github.com/alibaba/canal/wiki/Canal-Admin-QuickStart" target="_blank" rel="noreferrer">https://github.com/alibaba/canal/wiki/Canal-Admin-QuickStart</a></p><p>下载版本：<a href="https://github.com/alibaba/canal/releases/download/canal-1.1.8/canal.admin-1.1.8.tar.gz" target="_blank" rel="noreferrer">canal.admin-1.1.8.tar.gz</a></p></blockquote><p>报错</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>2025-07-29 15:53:06.904 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;requestMappingHandlerMapping&#39; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]: Factory method &#39;requestMappingHandlerMapping&#39; threw exception; nested exception is java.lang.IllegalArgumentException: canal.adminPasswd is empty , pls check https://github.com/alibaba/canal/issues/4941</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>解答</p><p><a href="https://github.com/alibaba/canal/issues/4941" target="_blank" rel="noreferrer">https://github.com/alibaba/canal/issues/4941</a></p><p>v1.1.8版本移除自带的password默认值，并在password未传入或非法时阻止节点启动来提醒用户设置自定义password</p><p>解决</p><p>登录mysql，执行如下密文生成sql即可(记得去掉第一个首字母的星号)</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>select password(&#39;admin&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>+-------------------------------------------+</span></span>
<span class="line"><span>| password(&#39;admin&#39;)                         |</span></span>
<span class="line"><span>+-------------------------------------------+</span></span>
<span class="line"><span>| *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |</span></span>
<span class="line"><span>+-------------------------------------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 如果遇到mysql8.0，可以使用select upper(sha1(unhex(sha1(&#39;admin&#39;))))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>修改<code>conf/application.yml</code>中的<code>canal.adminPasswd</code></p><p><a href="https://blog.csdn.net/langfeiyes/article/details/130711899" target="_blank" rel="noreferrer">https://blog.csdn.net/langfeiyes/article/details/130711899</a></p><p><a href="https://blog.csdn.net/qq_34497272/article/details/117658964" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_34497272/article/details/117658964</a></p>`,39)])])}const g=s(l,[["render",p]]);export{h as __pageData,g as default};
