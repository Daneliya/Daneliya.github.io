import{_ as i,c as a,o as n,ah as t,du as p,dv as l,dw as e,dx as r,dy as h}from"./chunks/framework.D5cOWG0Y.js";const b=JSON.parse('{"title":"SpringCloud与Restful","description":"","frontmatter":{"title":"SpringCloud与Restful","tags":["SpringCloud"],"categories":["SpringCloud"]},"headers":[],"relativePath":"Java/微服务专栏/SpringCloud/2_SpringCloud与Restful.md","filePath":"Java/微服务专栏/SpringCloud/2_SpringCloud与Restful.md","lastUpdated":1755802517000}'),k={name:"Java/微服务专栏/SpringCloud/2_SpringCloud与Restful.md"};function d(g,s,E,o,c,y){return n(),a("div",null,[...s[0]||(s[0]=[t('<h2 id="一、搭建springcloud项目开发环境" tabindex="-1">一、搭建SpringCloud项目开发环境 <a class="header-anchor" href="#一、搭建springcloud项目开发环境" aria-label="Permalink to “一、搭建SpringCloud项目开发环境”">​</a></h2><p>SpringCloud是建立在SpringBoot基础上的，所以开发者必须掌握SpringBoot开发框架。由于SpringCloud是基于Restful架构的RPC开发实现，所以微架构设计中往往在客户端利用RestTemplate来实现远程Restful业务调用。为了保证系统安全，也可以使用SpringSecurity进行安全访问控制。</p><p>SpringCloud技术与SpringBoot技术一样，都提供了统一的pom.xml配置项，配置好相应的版本之后就可以在各个Maven子模块中进行依赖支持库的简单引用。</p><p><img src="'+p+'" alt="Image00280" loading="lazy"></p><p>SpringCloud技术与传统开发不一样的地方在于，其版本号并未采用数字，而是使用了一系列英国的地名作为标注。</p><p><img src="'+l+`" alt="Image00281" loading="lazy"></p><h3 id="_1、搭建项目-引入依赖" tabindex="-1">1、搭建项目，引入依赖 <a class="header-anchor" href="#_1、搭建项目-引入依赖" aria-label="Permalink to “1、搭建项目，引入依赖”">​</a></h3><p>创建一个新的Springboot项目，修改pom.xml配置文件。如果要开发SpringCloud，则一定要引入SpringBoot依赖支持。</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 属性定义 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring-boot-dependencies.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.0.5.RELEASE&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring-boot-dependencies.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring-cloud-dependencies.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Finchley.SR2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring-cloud-dependencies.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 依赖库配置 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;				</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 定义SpringBoot依赖管理 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;spring-boot-dependencies&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${spring-boot-dependencies.version}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;pom&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;import&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;				</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 进行SpringCloud依赖包的导入处理 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;spring-cloud-dependencies&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${spring-cloud-dependencies.version}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;pom&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;import&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_2、springboot与springcloud对应版本及官方查询方法" tabindex="-1">2、SpringBoot与SpringCloud对应版本及官方查询方法 <a class="header-anchor" href="#_2、springboot与springcloud对应版本及官方查询方法" aria-label="Permalink to “2、SpringBoot与SpringCloud对应版本及官方查询方法”">​</a></h3><p>SpringCloud 与 SpringBoot各版本的对应关系</p><table tabindex="0"><thead><tr><th>SpringCloud</th><th>SpringBoot</th></tr></thead><tbody><tr><td>Finchley</td><td>2.0.x</td></tr><tr><td>Finchley.SR1</td><td>Spring Boot &gt;=2.0.3.RELEASE and &lt;=2.0.9RELEASE</td></tr><tr><td>Finchley.SR4</td><td>Spring Boot &gt;=2.0.3.RELEASE and &lt;=2.0.9RELEASE</td></tr><tr><td>Greenwich</td><td>2.1.x</td></tr><tr><td>Hoxton</td><td>2.2.x，2.3.x (Starting with SR5)</td></tr><tr><td>2020.0.x aka Ilford</td><td>2.4.x</td></tr></tbody></table><p>方式一：通过官网查询</p><p><a href="https://spring.io/projects/spring-cloud#learn" target="_blank" rel="noreferrer">https://spring.io/projects/spring-cloud#learn</a></p><p><img src="`+e+'" alt="image-20250407000038978" loading="lazy"></p><p>对应版本号后，点击 Reference Doc. 。能看到很明显的 Supported Boot Version 字样。</p><p><img src="'+r+'" alt="image-20250407000107973" loading="lazy"></p><p>方式二：</p><p><a href="https://start.spring.io/actuator/info" target="_blank" rel="noreferrer">https://start.spring.io/actuator/info</a></p><p><img src="'+h+`" alt="image-20250407000247690" loading="lazy"></p><p>可以得到一串json，其中对应关系一目了然，此网站返回内容，除了包含springCloud和springBoot的版本对应关系，还有其他组件和springBoot之间的版本对应关系。</p><p>————————————————</p><pre><code>                        版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。
</code></pre><p>原文链接：<a href="https://blog.csdn.net/xt314159/article/details/123372353" target="_blank" rel="noreferrer">https://blog.csdn.net/xt314159/article/details/123372353</a></p><h2 id="二、restful基础实现" tabindex="-1">二、Restful基础实现 <a class="header-anchor" href="#二、restful基础实现" aria-label="Permalink to “二、Restful基础实现”">​</a></h2><p>不管使用何种技术实现的RPC项目开发，采用的均为服务端与客户端结构。为了保证服务端定义与客户端访问的标准性，可以单独创建一个远程接口的描述项目。</p><h2 id="三、restful接口描述" tabindex="-1">三、Restful接口描述 <a class="header-anchor" href="#三、restful接口描述" aria-label="Permalink to “三、Restful接口描述”">​</a></h2><p>利用SpringCloud开发技术可以方便地实现Restful技术标准。从另外一个方面来说，这些接口如果要给其他消费端程序使用，就需要有良好的接口说明信息，可以明确地将服务接口以及参数的作用告诉使用者，此时就可以利用Swagger技术实现。</p><p>修改pom.xml配置文件，引入Swagger相关依赖库。</p><p>建立Swagger配置类，定义接口描述基础信息。</p><p>修改DeptRest程序类，使用Swagger进行接口描述。</p><p>本程序为Restful控制器中追加了接口的注解描述，当程序启动后可以通过swagger-ui.html地址进行访问，页面运行后的效果如图</p><h2 id="四、springsecurity安全访问" tabindex="-1">四、SpringSecurity安全访问 <a class="header-anchor" href="#四、springsecurity安全访问" aria-label="Permalink to “四、SpringSecurity安全访问”">​</a></h2>`,33)])])}const m=i(k,[["render",d]]);export{b as __pageData,m as default};
