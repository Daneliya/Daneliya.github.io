import{_ as s,c as a,o as e,ah as l,v_ as n,v$ as t,w0 as p,w1 as h,w2 as r,w3 as d,w4 as k,w5 as o,w6 as g,w7 as c}from"./chunks/framework.D5cOWG0Y.js";const _=JSON.parse('{"title":"部署迁移","description":"","frontmatter":{"title":"部署迁移","tags":["TIDB"],"categories":["TIDB"]},"headers":[],"relativePath":"数据库/分布式数据库TIDB/2_部署迁移.md","filePath":"数据库/分布式数据库TIDB/2_部署迁移.md","lastUpdated":1756054686000}'),b={name:"数据库/分布式数据库TIDB/2_部署迁移.md"};function u(m,i,y,F,B,C){return e(),a("div",null,[...i[0]||(i[0]=[l('<blockquote><p>注意，TiDB 仅支持 mac 和 Linux ，windows 可以使用虚拟机来安装。</p></blockquote><p>最基础的 TiDB 测试集群通常由 2 个 TiDB 实例、3 个 TiKV 实例、3 个 PD 实例和可选的 TiFlash 实例构成。通过 TiUP Playground，可以快速搭建出上述的一套基础测试集群，各实例的作用：</p><ul><li>TiDB Server：负责SQL解析和请求处理</li><li>PD Server：确保调度中心高可用</li><li>TiKV Server：数据分片存储</li><li>TiFlash：用于分析查询加速</li></ul><p>安装迁移步骤如下：</p><h2 id="一、安装-tiup" tabindex="-1">一、安装 TiUP <a class="header-anchor" href="#一、安装-tiup" aria-label="Permalink to “一、安装 TiUP”">​</a></h2><p>系统环境</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>系统：OpenEuler-25.03</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>下载并安装 TiUP：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --proto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;=https&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tlsv1.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://tiup-mirrors.pingcap.com/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装成功后会出现提示信息：</p><p><img src="'+n+'" alt="tidb_img4" loading="lazy"></p><p>记得执行一下 source 命令，让变量和设置在当前命令行中立即生效：</p><div class="language-Bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${your_shell_profile}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="二、启动并创建集群" tabindex="-1">二、启动并创建集群 <a class="header-anchor" href="#二、启动并创建集群" aria-label="Permalink to “二、启动并创建集群”">​</a></h2><p>执行启动命令时，每次重新执行命令会得到一个全新的集群，所以我们需要带上 --tag 参数来持久化数据：</p><div class="language-Bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tiup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playground</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tag</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> thumb</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>出现以下提示，即是启动成功了：</p><p><img src="'+t+'" alt="tidb_img5" loading="lazy"></p><p>根据提示访问 <a href="http://127.0.0.1:2379/dashboard%EF%BC%8C%E5%B0%B1%E8%83%BD%E7%9C%8B%E5%88%B0" target="_blank" rel="noreferrer">http://127.0.0.1:2379/dashboard，就能看到</a> TiDB 的面板了：</p><p><img src="'+p+'" alt="image-20250615154530913" loading="lazy"></p><p>默认账号为root，密码为空；</p><p>同时部署的Grafana账号密码为（admin/admin）</p><p><img src="'+h+'" alt="image-20250615154746136" loading="lazy"></p><p>这个面板可以用于监控数据库的 QPS、延迟、CPU、内存等核心数据、各个节点的运行状况、慢查询等信息，排查数据库问题的时候非常有用~</p><h2 id="三、数据迁移" tabindex="-1">三、数据迁移 <a class="header-anchor" href="#三、数据迁移" aria-label="Permalink to “三、数据迁移”">​</a></h2><p>现在 TiDB 已经成功启动了，接下来就是将 MySQL 的数据迁移到 TiDB。TiDB 的迁移相关内容可以参考文档：<a href="https://docs.pingcap.com/zh/tidb/stable/migration-overview/" target="_blank" rel="noreferrer">数据迁移概述</a>。</p><p>在实际生产中，官方的建议是使用 TiDB DM（适合小数据量，例如 1 TB 以内）和 TiDB Lightning（大数据量）进行数据迁移。</p><p>💡 如果在生产环境中遇到数据迁移的需求，一定要有完善的流程和策略，举个例子：</p><ol><li>全量数据同步：使用 TiDB DM 工具进行初始数据迁移</li><li>增量数据同步：配置 MySQL Binlog 到TiDB的实时同步</li><li>双写验证阶段：应用同时写入 MySQL 和TiDB，比对数据一致性</li><li>切换读流量：将读请求切换到 TiDB</li><li>切换写流量：确认无问题后，将写请求切换到 TiDB</li><li>下线旧MySQL：完成迁移后，逐步下线 MySQL 实例</li></ol><p>不过项目的数据量远远达不到 TB 级别，同时只需要一次全量同步即可。而且上述的两种方式都比较麻烦，所以可以直接用 SQL 文件的方式迁移数据。</p><h3 id="_1、导出原始数据" tabindex="-1">1、导出原始数据 <a class="header-anchor" href="#_1、导出原始数据" aria-label="Permalink to “1、导出原始数据”">​</a></h3><p>首先将 MySQL 中的数据导出：</p><p><img src="'+r+'" alt="tidb_img7" loading="lazy"></p><p><img src="'+d+'" alt="tidb_img8" loading="lazy"></p><h3 id="_2、创建-tidb-数据库并导入" tabindex="-1">2、创建 TiDB 数据库并导入 <a class="header-anchor" href="#_2、创建-tidb-数据库并导入" aria-label="Permalink to “2、创建 TiDB 数据库并导入”">​</a></h3><p><img src="'+k+'" alt="tidb_img9" loading="lazy"></p><p>手动创建数据库 后，执行刚刚导出的 SQL 文件：</p><p><img src="'+o+`" alt="tidb_img10" loading="lazy"></p><p>这样，我们就完成了数据从 MySQL 到 TiDB 的迁移。由于 TiDB 兼容 MySQL 协议，所以不需要改动业务代码，需要更改 yml 文件中的 <code>spring.datasource.url</code> 即可，如果没有给 TiDB 设置密码等安全配置，记得要把 <code>spring.datasource.password</code> 留空。</p><h3 id="_3、更改链接配置" tabindex="-1">3、更改链接配置 <a class="header-anchor" href="#_3、更改链接配置" aria-label="Permalink to “3、更改链接配置”">​</a></h3><p>将 yml 文件中，数据库的配置修改为：</p><div class="language-YAML line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://localhost:4000/thumb_db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_4、测试" tabindex="-1">4、测试 <a class="header-anchor" href="#_4、测试" aria-label="Permalink to “4、测试”">​</a></h3><p>启动项目，访问点赞接口测试一下，TiDB 里已经新增了一条记录：</p><p><img src="`+g+'" alt="tidb_img11" loading="lazy"></p><p>这样，迁移就完成了，可以自行测试一下迁移前后的性能对比。</p><h2 id="四、问题" tabindex="-1">四、问题 <a class="header-anchor" href="#四、问题" aria-label="Permalink to “四、问题”">​</a></h2><h3 id="问题一-tidb-部署之后-windows-无法本地访问远程-tidb" tabindex="-1">问题一：TiDB 部署之后，Windows 无法本地访问远程 TiDB <a class="header-anchor" href="#问题一-tidb-部署之后-windows-无法本地访问远程-tidb" aria-label="Permalink to “问题一：TiDB 部署之后，Windows 无法本地访问远程 TiDB”">​</a></h3><h4 id="方法一" tabindex="-1">方法一： <a class="header-anchor" href="#方法一" aria-label="Permalink to “方法一：”">​</a></h4><p>直接在启动命令之后加 <code>-host 0.0.0.0</code>，完整命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>tiup playground --tag thumb --host 0.0.0.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行命令之后，看到下图就算成功了</p><p><img src="'+c+`" alt="image-20250615154151204" loading="lazy"></p><h4 id="方法二" tabindex="-1">方法二 <a class="header-anchor" href="#方法二" aria-label="Permalink to “方法二”">​</a></h4><p>1）修改配置</p><p>打开指定的配置文件 <code>/root/.tiup/data/thumb/tidb-0/tidb.toml</code>，找到 <code>[server]</code> 部分，并将 <code>host</code> 修改为 <code>0.0.0.0</code>：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[server]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.0.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果没有 <code>[server]</code> 部分，可以直接添加上述内容。</p><p>2）重启TiDB服务</p><p>由于你使用的是 <code>tiup</code> 管理 TiDB，可以通过 <code>tiup</code> 命令重启服务：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tiup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果不确定集群名称，可以先列出所有集群：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tiup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后使用正确的集群名称重启服务。</p><p>3）验证监听状态</p><p>重启后，再次检查 TiDB 是否监听了 0.0.0.0:4000：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -tuln</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>正确的输出应该是：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.0.0.0:4000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          0.0.0.0:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">               LISTEN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,69)])])}const f=s(b,[["render",u]]);export{_ as __pageData,f as default};
