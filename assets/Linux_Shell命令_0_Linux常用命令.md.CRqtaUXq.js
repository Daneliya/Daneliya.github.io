import{_ as i,c as a,o as n,ah as l}from"./chunks/framework.D5cOWG0Y.js";const F=JSON.parse('{"title":"Linux常用命令","description":"","frontmatter":{"title":"Linux常用命令","autoGroup-1":"Linux","autoSort":1,"tags":["Linux"],"categories":["Linux"]},"headers":[],"relativePath":"Linux/Shell命令/0_Linux常用命令.md","filePath":"Linux/Shell命令/0_Linux常用命令.md","lastUpdated":1756054686000}'),e={name:"Linux/Shell命令/0_Linux常用命令.md"};function p(t,s,h,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h3 id="命令大全" tabindex="-1">命令大全 <a class="header-anchor" href="#命令大全" aria-label="Permalink to “命令大全”">​</a></h3><p><a href="https://www.runoob.com/linux/linux-command-manual.html" target="_blank" rel="noreferrer">https://www.runoob.com/linux/linux-command-manual.html</a></p><h3 id="命令操作之文件与目录" tabindex="-1">命令操作之文件与目录 <a class="header-anchor" href="#命令操作之文件与目录" aria-label="Permalink to “命令操作之文件与目录”">​</a></h3><ul><li><strong>is</strong>：查看文件和目录列表</li><li><strong>ls -a</strong>：查看文件和目录列表（包含隐藏文件）</li><li><strong>ll</strong>：显示出文件的权限、属主、大小等详细信息，是 <code>ls -l</code> 的简写。</li><li><strong>pwd</strong>：看当前所在目录的绝对路径</li><li><strong>cd</strong>：切换目录，<code>cd ..</code>代表切换到上一级，<code>./user</code>代表切换到当前目录下的user目录</li><li><strong>touch</strong>：创建文件</li><li><strong>mkdir</strong>：创建目录</li><li><strong>rm</strong>：删除文件</li><li><strong>rm -f</strong>：强制删除文件</li><li><strong>rm -rf</strong>：递归删除，例如<code>rn -rf data/</code>递归删除data/目录下的所有文件</li><li><strong>mv</strong>：移动文件或目录，例如<code>mv test.txt /usr/local</code>将 text.txt 移动到 /usr/local 路径下</li><li><strong>解压</strong>：<code>tar -zxvf 文件地址+名称</code></li><li><strong>解压zip格式</strong>：<code>unzip 文件地址+名称</code></li><li><strong>重命名</strong>：<code>mv 旧文件地址加名称 新文件地址加名称</code></li></ul><h3 id="命令操作之文件位置" tabindex="-1">命令操作之文件位置 <a class="header-anchor" href="#命令操作之文件位置" aria-label="Permalink to “命令操作之文件位置”">​</a></h3><p>实际工作中文件多了，可能就会忘掉它的位置，这个时候就可以使用一些出文件所在目录的地址，提升了文件查找的效率。</p><ul><li><p>which 查看可执行文件的位置。</p></li><li><p>whereis 查看文件的位置。</p></li><li><p>find 实际搜寻硬盘查询文件名称。</p></li></ul><p>1、whereis</p><p>whereis命令是定位可执行文件、源代码文件、帮助文件在文件系统中的位置。</p><p>这些文件的属性应属于原始代码，二进制文件，或是帮助文件。</p><p>whereis 程序还具有搜索源代码、指定备用搜索路径和搜索不寻常项的能力。</p><p>如果省略参数，则返回所有信息。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>whereis bash</span></span>
<span class="line"><span>bash: /bin/bash /etc/bash.bashrc /usr/share/man/man1/bash.1.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>说明： 以上输出信息从左至右分别为查询的程序名、bash路径、bash的man 手册页路径。</p><p>2、find</p><p>Linux下find命令在目录结构中搜索文件，并执行指定的操作。</p><p>Linux下find命令提供了相当多的查找条件，功能很强大。由于find具有强大的功能，所以它的选项也很多。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>sudo find . -name \`\`&quot;*.log&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>说明：在当前目录查找 以.log结尾的文件。 &quot;.&quot;代表当前目录</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>sudo find / -name \`\`&quot;*.log&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>说明：在根目录查找 以.log结尾的文件。 &quot;/&quot;代表当前目录</p><p>3、which</p><p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。</p><p>也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p><p>命令行输入<code>export</code>可以查看PATH变量</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>which java</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>说明：查看java可执行文件的地址</p><h3 id="命令操作之进程和磁盘管理" tabindex="-1">命令操作之进程和磁盘管理 <a class="header-anchor" href="#命令操作之进程和磁盘管理" aria-label="Permalink to “命令操作之进程和磁盘管理”">​</a></h3><ul><li><strong>查看进程</strong>：<code>ps -ef|grep java</code> （查看所有java运行的进程）</li><li><strong>结束进程</strong>：<code>kill -9 pid</code></li><li><strong>查看磁盘使用情况</strong>：<code>df -h</code></li><li><strong>查看目录占用磁盘空间大小</strong>：<code>du -m | sort -nr</code></li><li><strong>查看内存使用情况</strong>：<code>free -m|g</code>（m和g表示单位，二选一）</li><li><strong>实时显示系统中各个进程的资源占用状况</strong>：top</li><li><strong>查看单个进程占用资源状况</strong>：<code>top -d 1 -p pid</code>（pid 进程id）</li></ul><h3 id="命令操作之查看占用端口的进程" tabindex="-1">命令操作之查看占用端口的进程 <a class="header-anchor" href="#命令操作之查看占用端口的进程" aria-label="Permalink to “命令操作之查看占用端口的进程”">​</a></h3><ul><li><p>lsof命令：lsof(list open files)命令可以列出当前系统中打开的所有文件，包括网络端口。可以使用lsof命令查看某个端口被哪个进程占用。具体的命令为：<strong>sudo lsof -i :端口号</strong>，其中端口号为需要查询的端口号。</p><p>例如查询mysql的路径：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nlp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根据端口查看进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp:3306</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拿到pid后，由于linux在启动一个进程时，会在/proc下创建一个以PID命名的文件夹，该进程的信息存在该文件夹下。在该文件夹下有一个名为exe的文件，该文件指向了具体的命令文件，所以可以通过ls -l或者ll命令根据ps或top查到的PID查找命令的绝对路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/15330</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ll</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印的exe就是mysql的绝对路径 exe -&gt; /usr/libexec/mysqld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>netstat命令：使用netstat命令：netstat命令可以显示网络连接、路由表和网络接口信息等。可以使用netstat命令查看某个端口被哪个进程占用。具体的命令为：<strong>sudo netstat -tlnp | grep 端口号</strong>，其中端口号为需要查询的端口号。</p></li><li><p>ss命令：ss命令可以列出当前系统中打开的套接字(socket)信息，包括网络端口。可以使用ss命令查看某个端口被哪个进程占用。具体的命令为：<strong>sudo ss -tlnp | grep 端口号</strong>，其中端口号为需要查询的端口号。</p></li><li><p>fuser命令：fuser命令可以查看某个文件或目录被哪个进程占用。对于网络端口，也可以使用fuser命令进行查询，具体的命令为：<strong>sudo fuser 端口号/tcp</strong>，其中端口号为需要查询的端口号。</p></li><li><p>ps命令：ps命令可以列出当前系统中正在运行的进程信息。可以使用ps命令结合grep命令来查找某个进程，然后再查看该进程打开的网络端口。具体的命令为：<strong>sudo ps -ef | grep 进程名</strong>，其中进程名为需要查询的进程名。<strong>ps -aux | grep 8090</strong>，-aux 显示所有状态。</p></li><li><p>proc文件系统：使用/proc文件系统：在Linux系统中，每个进程都有一个对应的目录，存储了该进程的相关信息。可以使用/proc文件系统来查看某个端口被哪个进程占用。具体的命令为：<strong>sudo ls -l /proc/$(sudo lsof -t -i:端口号) | grep exe</strong>，其中端口号为需要查询的端口号。</p></li></ul><blockquote><p>补充</p><p>windows查看进程：<a href="https://blog.csdn.net/mrxutada/article/details/119203981" target="_blank" rel="noreferrer">https://blog.csdn.net/mrxutada/article/details/119203981</a></p></blockquote><h3 id="防火墙相关" tabindex="-1">防火墙相关 <a class="header-anchor" href="#防火墙相关" aria-label="Permalink to “防火墙相关”">​</a></h3><p>firewalld与iptables命令：<a href="https://zhuanlan.zhihu.com/p/452927048" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/452927048</a></p><p>firewalld服务重载、重启、停止</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新加载防火墙配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reload</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># unit is masked 防火墙默认是锁定的，需要取消服务的锁定</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unmask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启防火墙(redhat系列)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 临时关闭防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开机启用防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开机禁止防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看firewalld的运行状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --state</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>firewalld开放端口（public）</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 公共区域设置开放21端口永久生效并写入配置文件（参数：--permanent）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 参数：--permanent，设置即立刻生效并且写入配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=21/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启防火墙范围</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/firewalld/zones/public.xml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9001-9050&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询防火墙端口21是否开放</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --query-port=21/tcp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除开放的端口21</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remove-port=21/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>firewalld区域规则修改</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询防火墙规则列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看开启的端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-ports</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新增一条区域规则httpd服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=internal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-service=http</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证规则</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --zone=internal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>ubuntu中查看防火墙的状态</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 Ubuntu 中查看防火墙的状态，可以使用 ufw 命令。ufw 是 Uncomplicated Firewall 的缩写，是 Ubuntu 默认的防火墙管理工具。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果您想要查看防火墙的状态，可以使用以下命令：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 该命令将显示防火墙的状态，如果防火墙已经开启，则会显示如下信息：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Status:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> active</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         Action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      From</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                         ------</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      ----</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OpenSSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    ALLOW</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       Anywhere</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">它会显示出所有被允许的端口，及其来源。如果您没有配置防火墙或者所有端口都已经被开放，则状态可能如下所示：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Status:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inactive</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果防火墙被激活，并且您需要开放某些端口，请参考以下示例，使用 ufw 命令打开和关闭端口：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80/tcp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 开放TCP 80端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deny</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 113</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 拒绝UDP 113端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 53/tcp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 删除TCP 53端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果您想要关闭防火墙，请使用以下命令：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要注意的是，对防火墙的任何更改都需要使用 sudo 权限进行设置。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="查看linux系统版本" tabindex="-1">查看Linux系统版本 <a class="header-anchor" href="#查看linux系统版本" aria-label="Permalink to “查看Linux系统版本”">​</a></h3><ol><li>使用<code>cat</code>命令查看<code>/etc/issue</code>文件。这种方法适用于所有Linux发行版，但在双核CPU中，<code>cpuinfo</code>中会看到两个CPU，可能会让人误以为是两个单核的CPU，实际上应该通过<code>Physical Processor ID</code>来区分单核和双核。</li><li>使用<code>uname</code>命令查看系统信息。例如，<code>uname -a</code>命令可以查看系统的内核名/版本、网络主机名、操作系统等信息。</li><li>查看配置文件<code>/etc/issue</code>或<code>/etc/*release</code>文件。这些文件中会写有操作系统和版本号等信息。例如，对于Redhat/Centos系统，可以查看<code>/etc/redhat_release</code>文件；对于Debian系统，可以查看<code>/etc/os-release</code>文件。</li><li>此外，还可以通过查看内存文件<code>/proc/version</code>来查看操作系统版本号、内核版本号、网络主机名等信息。</li></ol><h3 id="使用curl命令在linux服务器调用接口" tabindex="-1">使用curl命令在Linux服务器调用接口 <a class="header-anchor" href="#使用curl命令在linux服务器调用接口" aria-label="Permalink to “使用curl命令在Linux服务器调用接口”">​</a></h3><p>一般情况我们测试对方ip端口，都是用<strong>telnet</strong>命令来测试通不通</p><p>示例：telnet 127.0.0.1 8080</p><p>当服务器不支持 telnet 命令，又无法安装时，我们就可以使用 curl 命令</p><blockquote><p>curl -X POST -H &quot;Content-Type: application/json&quot; -d &#39;json请求体的内容&#39; &quot;需要调用的url&quot;</p></blockquote><p>curl命令是一个非常强大的命令行工具，它可以发送各种类型的HTTP请求，并且支持各种协议和认证方式。下面是curl命令的一些常用选项</p><ul><li>-X指定请求方法，如GET、POST、PUT等；</li><li>-H指定请求头，如Content-Type、uthorization等；</li><li>-d指定请求体，如JSON、XML等；</li><li>-u指定认证信息，如用户名、密码等；</li><li>-o指定输出文件名，用于保存响应结果。</li></ul><p>GET请求</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8080/api</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>POST请求</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;name&quot;:&quot;test&quot;}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8080/api</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>发送文件方式</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myxmlfile.txt为磁盘上面的xml文件，后面为请求路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;content-type: application/xml&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @/home/disk/file/myxmlfile.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://192.168.1.1:8080/api/uploadfile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="未知的名称或服务及java-net-unknownhostexception异常" tabindex="-1">未知的名称或服务及java.net.UnknownHostException异常 <a class="header-anchor" href="#未知的名称或服务及java-net-unknownhostexception异常" aria-label="Permalink to “未知的名称或服务及java.net.UnknownHostException异常”">​</a></h3><p>java.net.UnknownHostException异常</p><p><a href="https://blog.csdn.net/FMC_WBL/article/details/135737199" target="_blank" rel="noreferrer">https://blog.csdn.net/FMC_WBL/article/details/135737199</a></p><p>未知的名称或服务 DNS 配置问题</p><p><a href="https://www.cnblogs.com/sunny3158/p/16778076.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/sunny3158/p/16778076.html</a></p><p><a href="https://blog.csdn.net/m0_72838865/article/details/126784090" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_72838865/article/details/126784090</a></p><p>Failed to restart network.service: Unit network.service not found.</p><p><a href="https://blog.csdn.net/qq_33468857/article/details/125135211" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_33468857/article/details/125135211</a></p><h3 id="查看所有java应用的内存占用情况" tabindex="-1">查看所有java应用的内存占用情况 <a class="header-anchor" href="#查看所有java应用的内存占用情况" aria-label="Permalink to “查看所有java应用的内存占用情况”">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print &quot;PID:&quot;$1&quot;,mem:&quot;$6&quot;,CPU percent:&quot;$9&quot;%&quot;,&quot;mem percent:&quot;$10&quot;%&quot;}&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>结果</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root@qydy:~#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> top</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print &quot;PID:&quot;$1&quot;,mem:&quot;$6&quot;,CPU percent:&quot;$9&quot;%&quot;,&quot;mem percent:&quot;$10&quot;%&quot;}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:21509,mem:868988,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:12.5%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:1.3%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:327578,mem:1.9g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:6.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:3.1%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:1581117,mem:4.9g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:6.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:7.8%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:1856910,mem:873336,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:6.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:1.3%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:1041,mem:720216,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:1.1%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:9466,mem:1.3g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.1%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:39646,mem:1.6g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.5%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:42408,mem:1.2g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:1.9%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:108419,mem:1.5g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.4%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:326532,mem:1.2g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.0%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:339477,mem:1.6g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.6%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:342861,mem:1.2g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:1.9%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:343467,mem:1.5g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.4%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:687881,mem:1.8g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.8%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:719273,mem:1.4g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.3%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:761835,mem:1.8g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:2.8%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PID:800379,mem:2.3g,CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> percent:3.7%</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="yum配置" tabindex="-1">yum配置 <a class="header-anchor" href="#yum配置" aria-label="Permalink to “yum配置”">​</a></h3><p><a href="https://developer.aliyun.com/article/1366034" target="_blank" rel="noreferrer">CentOS7配置阿里yum源 超详细！！！-阿里云开发者社区 (aliyun.com)</a></p><p><a href="https://blog.csdn.net/KingveyLee/article/details/114984534" target="_blank" rel="noreferrer">CentOS7配置阿里云镜像源（超详细过程）_centos7 一键配置 配置阿里源脚本-CSDN博客</a></p>`,72)])])}const g=i(e,[["render",p]]);export{F as __pageData,g as default};
