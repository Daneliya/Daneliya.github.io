import{_ as a,c as i,o as s,ah as l}from"./chunks/framework.D5cOWG0Y.js";const b=JSON.parse('{"title":"Mysql索引","description":"","frontmatter":{"title":"Mysql索引","autoGroup-1":"MySQL高级","tags":["MySQL"],"categories":["MySQL"]},"headers":[],"relativePath":"数据库/MySQL/Mysql索引.md","filePath":"数据库/MySQL/Mysql索引.md","lastUpdated":1756054686000}'),n={name:"数据库/MySQL/Mysql索引.md"};function t(r,e,d,p,o,c){return s(),i("div",null,[...e[0]||(e[0]=[l(`<h2 id="索引介绍" tabindex="-1">索引介绍 <a class="header-anchor" href="#索引介绍" aria-label="Permalink to “索引介绍”">​</a></h2><p>MySQL 索引是一种数据结构，用于加快数据库查询的速度和性能。通过使用索引，MySQL 可以直接定位到满足查询条件的数据行，而无需逐行扫描整个表。</p><blockquote><p>MySQL 索引类似于书籍的索引，通过存储指向数据行的指针，可以快速定位和访问表中的特定数据。</p><p>打个比方，如果合理的设计且使用索引的 MySQL 是一辆兰博基尼的话，那么没有设计和使用索引的 MySQL 就是一个人力三轮车。</p><p>拿汉语字典的目录页（索引）打比方，我们可以按拼音、笔画、偏旁部首等排序的目录（索引）快速查找到需要的字。</p></blockquote><p>索引分单列索引和组合索引：</p><ul><li>单列索引，即一个索引只包含单个列，一个表可以有多个单列索引。</li><li>组合索引，即一个索引包含多个列。</li></ul><p>创建索引时，你需要确保该索引是应用在 SQL 查询语句的条件(一般作为 WHERE 子句的条件)。</p><p>实际上，索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录。</p><p>索引虽然能够提高查询性能，但也需要注意以下几点：</p><ul><li>索引需要占用额外的存储空间。</li><li>对表进行插入、更新和删除操作时，索引需要维护，可能会影响性能。</li><li>过多或不合理的索引可能会导致性能下降，因此需要谨慎选择和规划索引。</li></ul><h2 id="添加索引" tabindex="-1">添加索引 <a class="header-anchor" href="#添加索引" aria-label="Permalink to “添加索引”">​</a></h2><p>在mysql中有多种索引，有普通索引，全文索引，唯一索引，多列索引。</p><h3 id="普通索引" tabindex="-1">普通索引 <a class="header-anchor" href="#普通索引" aria-label="Permalink to “普通索引”">​</a></h3><p>使用 <strong>CREATE INDEX</strong> 语句可以创建普通索引。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE INDEX index_name</span></span>
<span class="line"><span>ON table_name (column1 [ASC|DESC], column2 [ASC|DESC], ...);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>CREATE INDEX</code>: 用于创建普通索引的关键字。</li><li><code>index_name</code>: 指定要创建的索引的名称。索引名称在表中必须是唯一的。</li><li><code>table_name</code>: 指定要在哪个表上创建索引。</li><li><code>(column1, column2, ...)</code>: 指定要索引的表列名。你可以指定一个或多个列作为索引的组合。这些列的数据类型通常是数值、文本或日期。</li><li><code>ASC</code>和<code>DESC</code>（可选）: 用于指定索引的排序顺序。默认情况下，索引以升序（ASC）排序。</li></ul><p>假设有一个名为 students 的表，包含 id、name 和 age 列，在 name 列上创建一个普通索引。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE INDEX idx_name ON students (name);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="唯一索引" tabindex="-1">唯一索引 <a class="header-anchor" href="#唯一索引" aria-label="Permalink to “唯一索引”">​</a></h3><p>在 MySQL 中，你可以使用 <strong>CREATE UNIQUE INDEX</strong> 语句来创建唯一索引。</p><p>唯一索引确保索引中的值是唯一的，不允许有重复值。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE UNIQUE INDEX index_name</span></span>
<span class="line"><span>ON table_name (column1 [ASC|DESC], column2 [ASC|DESC], ...);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>CREATE UNIQUE INDEX</code>: 用于创建唯一索引的关键字组合。</li><li><code>index_name</code>: 指定要创建的唯一索引的名称。索引名称在表中必须是唯一的。</li><li><code>table_name</code>: 指定要在哪个表上创建唯一索引。</li><li><code>(column1, column2, ...)</code>: 指定要索引的表列名。你可以指定一个或多个列作为索引的组合。这些列的数据类型通常是数值、文本或日期。</li><li><code>ASC</code>和<code>DESC</code>（可选）: 用于指定索引的排序顺序。默认情况下，索引以升序（ASC）排序。</li></ul><p>以下是一个创建唯一索引的实例： 假设我们有一个名为 employees的 表，包含 id 和 email 列，现在我们想在email列上创建一个唯一索引，以确保每个员工的电子邮件地址都是唯一的。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE UNIQUE INDEX idx_email ON employees (email);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="全文索引" tabindex="-1">全文索引 <a class="header-anchor" href="#全文索引" aria-label="Permalink to “全文索引”">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE FULLTEXT INDEX index_name ON t_dept(name);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="多列索引" tabindex="-1">多列索引 <a class="header-anchor" href="#多列索引" aria-label="Permalink to “多列索引”">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CREATE INDEX index_name_no ON t_dept(name,no);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="索引失效" tabindex="-1">索引失效 <a class="header-anchor" href="#索引失效" aria-label="Permalink to “索引失效”">​</a></h2><p><a href="https://blog.csdn.net/sy_white/article/details/122112440" target="_blank" rel="noreferrer">索引失效的情况及解决(超详细)-CSDN博客</a></p><p>参考资料</p><p><a href="https://zhuanlan.zhihu.com/p/293553628" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/293553628</a></p><p><a href="https://www.runoob.com/mysql/mysql-index.html" target="_blank" rel="noreferrer">https://www.runoob.com/mysql/mysql-index.html</a></p><h2 id="索引下推" tabindex="-1">索引下推 <a class="header-anchor" href="#索引下推" aria-label="Permalink to “索引下推”">​</a></h2><p><a href="https://cloud.tencent.com/developer/article/2398503" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/2398503</a><a href="https://blog.csdn.net/weixin_43310500/article/details/135090387" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_43310500/article/details/135090387</a></p>`,35)])])}const m=a(n,[["render",t]]);export{b as __pageData,m as default};
