import{_ as a,c as i,o as n,ah as e,oj as l,ok as p,ol as h,om as t,on as r,oo as d,op as k}from"./chunks/framework.D5cOWG0Y.js";const _=JSON.parse('{"title":"Python数据分析—读取CSV","description":"","frontmatter":{"title":"Python数据分析—读取CSV","tags":["Python"],"categories":["Python"]},"headers":[],"relativePath":"Python/数据分析/7_Python数据分析—读取CSV.md","filePath":"Python/数据分析/7_Python数据分析—读取CSV.md","lastUpdated":1755802517000}'),o={name:"Python/数据分析/7_Python数据分析—读取CSV.md"};function c(g,s,E,b,y,m){return n(),i("div",null,[...s[0]||(s[0]=[e(`<p>CSV是数据分析师最喜欢的数据格式。</p><p>与JSON一样，CSV也是纯文本文件，也就是说文字内容不存在粗体、下划线、字号、颜色等特征</p><p>如果把逗号对齐，CSV的结构基本上就是一个表格。</p><h2 id="一、csv" tabindex="-1">一、CSV <a class="header-anchor" href="#一、csv" aria-label="Permalink to “一、CSV”">​</a></h2><h3 id="_1、概念" tabindex="-1">1、概念 <a class="header-anchor" href="#_1、概念" aria-label="Permalink to “1、概念”">​</a></h3><p>CSV，全称是Comma-Separated Values，表示逗号分隔值。</p><h3 id="_2、结构" tabindex="-1">2、结构 <a class="header-anchor" href="#_2、结构" aria-label="Permalink to “2、结构”">​</a></h3><p>1）表头</p><p>a、有表头：CSV文件第一行，也就是展示列名那行，大部分情况下是表格头，包含了许多属性名</p><p>b、无表头：也可以无表头，以数据直接开始</p><p>2）数据</p><p>a、在表头下面，每一条数据都是独占一行的，因此当我们把CSV文件转换成DataFrame后，CSV的行与DataFrame的行之间能够直接对应上</p><p>b、每行数据里所包含的值的数量应该是相同的，逗号分隔符的数量也必须相同，但凡哪行多了或少了，说明那就不是一个合格有效的CSV</p><h3 id="_3、特殊情况" tabindex="-1">3、特殊情况 <a class="header-anchor" href="#_3、特殊情况" aria-label="Permalink to “3、特殊情况”">​</a></h3><p>1）当数据值里面包含英文逗号，可以用引号围完整的值。里面的逗号，就不会被当成分隔符的逗号了</p><p>2）当某个值为空缺，可以让两个分隔逗号相邻，表示中间那个值不存在</p><h3 id="_4、csv与json对比" tabindex="-1">4、CSV与JSON对比 <a class="header-anchor" href="#_4、csv与json对比" aria-label="Permalink to “4、CSV与JSON对比”">​</a></h3><p>CSV本身是一个非常规整的二维结构，能一眼就知道它所对应的表格长什么样子</p><p>JSON则不同，它的结构能非常灵活，也可以层层嵌套，很难直观看出对应表格长什么样</p><p>因此，JSON是通用编程时受欢迎的数据结构，而CSV是数据分析时受欢迎的数据结构</p><h3 id="_5、编写csv" tabindex="-1">5、编写CSV <a class="header-anchor" href="#_5、编写csv" aria-label="Permalink to “5、编写CSV”">​</a></h3><p>打开代码编辑器或文本编辑器，按照CSV格式的规则写好后，把文件保存为以.csv结尾的文件即可</p><h3 id="_6、默认规范" tabindex="-1">6、默认规范 <a class="header-anchor" href="#_6、默认规范" aria-label="Permalink to “6、默认规范”">​</a></h3><p>用代码分析数据时，尽量让源数据文件，以CSV、JSON等纯文本格式，或者sqlite等数据库文件格式</p><h3 id="_7、优点" tabindex="-1">7、优点 <a class="header-anchor" href="#_7、优点" aria-label="Permalink to “7、优点”">​</a></h3><p>体积小，结构工整，容易让人理解，能非常直接地转换成表格。</p><p>可以用Excel软件去读取、修改或导出CSV。</p><h3 id="_8、读取" tabindex="-1">8、读取 <a class="header-anchor" href="#_8、读取" aria-label="Permalink to “8、读取”">​</a></h3><p>在实际的数据分析中，由于一般数据量比较大，动辄1G以上的CSV数据集是很常见的，</p><p>1）Excel</p><p>可能会卡住。因为Excel不止要展示数据，还要试图展示格式(虽然文件里可能就没有额外格式)，还得加载一系列功能等</p><p>2）代码编辑器或者纯文本编辑器</p><p>3）更好的方法</p><p>用代码读取，转换成DataFrame，然后用Pandas库里的方法，想看几行看几行，而不用等海量的数据全部加载出来</p><h2 id="二、读取csv" tabindex="-1">二、读取CSV <a class="header-anchor" href="#二、读取csv" aria-label="Permalink to “二、读取CSV”">​</a></h2><h3 id="_1、导入pandas" tabindex="-1">1、导入Pandas <a class="header-anchor" href="#_1、导入pandas" aria-label="Permalink to “1、导入Pandas”">​</a></h3><p><code>import pandas as pd</code></p><h3 id="_2、read-csv函数" tabindex="-1">2、read_csv函数 <a class="header-anchor" href="#_2、read-csv函数" aria-label="Permalink to “2、read_csv函数”">​</a></h3><p>顾名思义是用来读CSV文件的</p><p>把文件的路径作为参数</p><p><strong>以下用代码而不是软件去处理数据，能更快处理完成</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fifa_players_22.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fifa_players_22.csv文件，里面记录了2万条国际足联球员的信息，文件体积是12MB左右</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.head()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+l+`" alt="" loading="lazy"></p><h4 id="_1-可选参数header" tabindex="-1">1）可选参数header <a class="header-anchor" href="#_1-可选参数header" aria-label="Permalink to “1）可选参数header”">​</a></h4><p>a、csv文件有表头，省略可选参数header，默认会把第一行内容作为列名</p><p>b、csv文件无表头，设置&#39;header=None&#39;，表示不要把第一行当做列名。那解析出来的DataFrame就会把第一行视为第一条数据，列名用从0开始的数据代替</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fifa_players_22.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.head()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+p+`" alt="" loading="lazy"></p><h4 id="_2-可选参数index-col" tabindex="-1">2）可选参数index_col <a class="header-anchor" href="#_2-可选参数index-col" aria-label="Permalink to “2）可选参数index_col”">​</a></h4><p>a、只用位置索引，省略可选参数index_col，默认用位置索引</p><p>b、把某一列作为标签索引，设置&#39;index_col=列名/列的位置索引&#39;，返回的DataFrame就会把列名的值作为标签索引。如下例子，可以通过标签索引&#39;球员ID&#39;，而不是仅通过位置索引，来提取数据了</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fifa_players_22.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index_col</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sofifa_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.head()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.loc[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">261667</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+h+`" alt="" loading="lazy"></p><h2 id="三、展示csv的方法" tabindex="-1">三、展示CSV的方法 <a class="header-anchor" href="#三、展示csv的方法" aria-label="Permalink to “三、展示CSV的方法”">​</a></h2><h3 id="一-、set-option函数" tabindex="-1">(一)、set_option函数 <a class="header-anchor" href="#一-、set-option函数" aria-label="Permalink to “(一)、set_option函数”">​</a></h3><p>1、更改展示列数上限</p><p>默认只展示20列。</p><p>当我们遇到的数据包含非常多列的时候，输入的DataFrame里，中间有些列就会被自动忽略，被用&#39;...&#39;表示。</p><p>假如想查看所有列，可以通过set_option函数，提升展示的列数的上限。</p><p>第一个参数传入&#39;display.max_columns&#39;，表示展示列数的上限。</p><p>第二个参数传入，你希望最多看到的列数</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.set_option(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;display.max_columns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+t+`" alt="" loading="lazy"></p><p>2、更改展示值的字符上限</p><p>默认的字符上限是50</p><p>当我们遇到值很长的时候，文字不会展示全，如上例子里，&#39;player_tags&#39;和&#39;player_traits&#39;两列</p><p>假如想让值展示的长度更大一些，可以通过set_option函数，提升值展示的字符上限。</p><p>第一个参数传入&#39;display.max_colwidths&#39;，每列里的值最多包含几个字符限。</p><p>第二个字符上限到的列数</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.set_option(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;display.max_colwidth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+r+`" alt="" loading="lazy"></p><h3 id="二-、head-tail-sample方法" tabindex="-1">(二)、head/tail/sample方法 <a class="header-anchor" href="#二-、head-tail-sample方法" aria-label="Permalink to “(二)、head/tail/sample方法”">​</a></h3><p>可以得到开头/结尾/随机的N行</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.head()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.tail()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认随机返回一行的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.sample()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="三-、info方法" tabindex="-1">(三)、info方法 <a class="header-anchor" href="#三-、info方法" aria-label="Permalink to “(三)、info方法”">​</a></h3><p>快速了解一个DataFrame，除了看它实际的数据之外，还可以通过info，获得DataFrame的概况信息</p><p>1、当列数太多时，只会展示部分信息</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.info()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>结果</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pandas.core.frame.DataFrame&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Index: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19239</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entries, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">158023</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">264540</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Columns: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">106</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entries, player_url to nation_flag_url</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtypes: float64(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), int64(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">44</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">memory usage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MB</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>从上到下分别是：类型、索引的范围、列的数量、列的数据类型、占用memory</p><p>2、当列的数量较少时，还会返回每列具体的列名，排除掉空值后实际值的数量，和每一列的数据类型</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fifa_players_22_simple.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df3.head(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df3.info()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+d+'" alt="" loading="lazy"></p><h3 id="四-、descirbe方法" tabindex="-1">(四)、descirbe方法 <a class="header-anchor" href="#四-、descirbe方法" aria-label="Permalink to “(四)、descirbe方法”">​</a></h3><p>针对数字类型的列，一次性展示多种统计信息</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.describe()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+k+'" alt="" loading="lazy"></p>',88)])])}const f=a(o,[["render",c]]);export{_ as __pageData,f as default};
