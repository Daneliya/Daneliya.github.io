import{_ as i,c as a,o as n,ah as e}from"./chunks/framework.D5cOWG0Y.js";const o=JSON.parse('{"title":"Docker安装Nginx","description":"","frontmatter":{"title":"Docker安装Nginx","date":"2023-12-31","autoGroup-2":"Docker热门镜像","autoSort":9,"tags":["Docker"],"categories":["Docker"]},"headers":[],"relativePath":"Java/容器/Docker/镜像安装-Docker安装Nginx.md","filePath":"Java/容器/Docker/镜像安装-Docker安装Nginx.md","lastUpdated":1755802517000}'),l={name:"Java/容器/Docker/镜像安装-Docker安装Nginx.md"};function t(h,s,r,p,k,d){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h3 id="_1、查看可用的-nginx-版本" tabindex="-1">1、查看可用的 Nginx 版本 <a class="header-anchor" href="#_1、查看可用的-nginx-版本" aria-label="Permalink to “1、查看可用的 Nginx 版本”">​</a></h3><ol><li>访问 Nginx 镜像库地址： <a href="https://hub.docker.com/_/nginx?tab=tags%E3%80%82%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87" target="_blank" rel="noreferrer">https://hub.docker.com/_/nginx?tab=tags。可以通过</a> Sort by 查看其他版本的 Nginx，默认是最新版本 <strong>nginx:latest</strong>。在下拉列表中找到其他你想要的版本。</li><li>使用用 <strong>docker search nginx</strong> 命令来查看可用版本。</li></ol><h3 id="_2、取最新版的-nginx-镜像" tabindex="-1">2、取最新版的 Nginx 镜像 <a class="header-anchor" href="#_2、取最新版的-nginx-镜像" aria-label="Permalink to “2、取最新版的 Nginx 镜像”">​</a></h3><p>这里我们拉取官方的最新版本的镜像：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3、查看本地镜像" tabindex="-1">3、查看本地镜像 <a class="header-anchor" href="#_3、查看本地镜像" aria-label="Permalink to “3、查看本地镜像”">​</a></h3><p>使用以下命令来查看是否已安装了 nginx：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>TAG显示（latest）证明已安装最新版本 nginx 镜像。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@192 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# docker images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REPOSITORY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            TAG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         SIZE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                 latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    605c77e624dd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> years</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     141MB</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4、运行容器" tabindex="-1">4、运行容器 <a class="header-anchor" href="#_4、运行容器" aria-label="Permalink to “4、运行容器”">​</a></h3><p>安装完成后，我们可以使用以下命令来运行 nginx 容器：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8080:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/dir/dist/:/usr/share/nginx/html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-d </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>参数说明：</p><ul><li><code>--rm</code>: 这是一个标志，意味着当容器停止运行时，自动删除该容器。这对于临时任务或一次性任务很有用，因为不需要手动清理。</li><li><strong>-p 8080:80</strong>： 端口进行映射，将本地 8080 端口映射到容器内部的 80 端口。</li><li><strong>--name nginx-test</strong>：容器名称。</li><li><code>-v /dir/dist/:/usr/share/nginx/html</code>: 这是一个卷映射。它将宿主机上的<code>/dir/dist/</code>目录映射到容器内的<code>/usr/share/nginx/html</code>目录。这意味着，如果在宿主机上的<code>/dir/dist/</code>目录中有所有的文件和文件夹，它们将出现在容器内的相应位置。这对于配置静态网站或应用程序的部署非常有用。</li><li><strong>-d nginx</strong>： 设置容器在在后台一直运行。</li></ul><h3 id="_5、安装成功" tabindex="-1">5、安装成功 <a class="header-anchor" href="#_5、安装成功" aria-label="Permalink to “5、安装成功”">​</a></h3><p>最后我们可以通过浏览器可以直接访问 8080 端口的 nginx 服务。</p>`,17)])])}const c=i(l,[["render",t]]);export{o as __pageData,c as default};
