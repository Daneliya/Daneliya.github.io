import{_ as i,c as a,o as t,ah as n}from"./chunks/framework.D5cOWG0Y.js";const E=JSON.parse('{"title":"Python使用API","description":"","frontmatter":{"title":"Python使用API","tags":["Python"],"categories":["Python"]},"headers":[],"relativePath":"Python/爬虫/5_Python使用API.md","filePath":"Python/爬虫/5_Python使用API.md","lastUpdated":1757350003000}'),e={name:"Python/爬虫/5_Python使用API.md"};function l(h,s,p,r,d,k){return t(),a("div",null,[...s[0]||(s[0]=[n(`<p>当爬虫因网页结构变化失效、或面临合规风险时，<strong>API（Application Programming Interface，应用程序编程接口）</strong> 是更可靠的数据获取方案。它是官方定义的 “软件对话说明书”，能让程序直接、高效地获取结构化数据。以下是 API 的核心知识、使用方法及与爬虫的对比：</p><h2 id="一、api-是什么" tabindex="-1">一、API 是什么？ <a class="header-anchor" href="#一、api-是什么" aria-label="Permalink to “一、API 是什么？”">​</a></h2><p>API 本质是<strong>两个软件之间的通讯规则</strong>，定义了 “如何通过请求获取服务端数据”。通俗来说，它就像餐厅的 “菜单”—— 用户（程序）按菜单（API 规则）点单（发送请求），厨房（服务端）按规则上菜（返回数据）。</p><p>例如：某论坛提供 API，程序可通过 API 直接获取 “最热主题”“用户信息”，无需爬取网页 HTML 再解析。</p><h2 id="二、使用-api-的核心要素" tabindex="-1">二、使用 API 的核心要素 <a class="header-anchor" href="#二、使用-api-的核心要素" aria-label="Permalink to “二、使用 API 的核心要素”">​</a></h2><p>要通过 API 获取数据，需明确 4 个关键信息（均来自官方 API 文档）：</p><h3 id="_1-api-端点-endpoint" tabindex="-1">1. API 端点（Endpoint） <a class="header-anchor" href="#_1-api-端点-endpoint" aria-label="Permalink to “1. API 端点（Endpoint）”">​</a></h3><ul><li><strong>定义</strong>：发送请求的目标 URL，不同功能对应不同端点。</li><li>示例： <ul><li>论坛 “获取最热主题” 的端点：<code>https://api.v2ex.com/topics/hot.json</code></li><li>论坛 “获取最新主题” 的端点：<code>https://api.v2ex.com/topics/latest.json</code></li></ul></li></ul><h3 id="_2-请求方法-http-method" tabindex="-1">2. 请求方法（HTTP Method） <a class="header-anchor" href="#_2-请求方法-http-method" aria-label="Permalink to “2. 请求方法（HTTP Method）”">​</a></h3><p>API 基于 HTTP 协议，常用方法与功能对应：</p><table tabindex="0"><thead><tr><th>方法</th><th>功能</th><th>示例场景</th></tr></thead><tbody><tr><td><code>GET</code></td><td><strong>获取数据</strong>（最常用）</td><td>查热门主题、用户信息</td></tr><tr><td><code>POST</code></td><td><strong>提交数据</strong></td><td>发布新主题、用户登录</td></tr><tr><td><code>PUT</code></td><td><strong>更新数据</strong></td><td>修改已发布的主题内容</td></tr><tr><td><code>DELETE</code></td><td><strong>删除数据</strong></td><td>删除某条评论</td></tr></tbody></table><h3 id="_3-查询参数与请求体" tabindex="-1">3. 查询参数与请求体 <a class="header-anchor" href="#_3-查询参数与请求体" aria-label="Permalink to “3. 查询参数与请求体”">​</a></h3><ul><li><strong>查询参数</strong>：URL 中通过<code>?key=value</code>传递的额外信息（常用于<code>GET</code>请求）。 示例：<code>https://api.v2ex.com/users/show.json?username=test</code>（通过<code>username=test</code>指定查询用户）。</li><li><strong>请求体（Body）</strong>：包含更多数据的载体（常用于<code>POST</code>/<code>PUT</code>请求），如提交表单时的 “用户名 + 密码”。 注：<code>GET</code>请求的请求体通常为空（数据通过查询参数传递）。</li></ul><h3 id="_4-响应格式" tabindex="-1">4. 响应格式 <a class="header-anchor" href="#_4-响应格式" aria-label="Permalink to “4. 响应格式”">​</a></h3><p>API 返回的数据多为<strong>结构化格式</strong>，便于程序直接解析：</p><ul><li><strong>JSON</strong>（最常用）：文本格式，可直接转为 Python 的字典 / 列表；</li><li><strong>XML</strong>：标签式格式，需专用库解析（如<code>xml.etree.ElementTree</code>）。</li></ul><p>示例 JSON 响应（论坛热门主题）：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python学习推荐&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;分享几个学习资源...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API vs 爬虫&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;哪个更适合数据获取？...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="额外注意-认证与授权" tabindex="-1">额外注意：认证与授权 <a class="header-anchor" href="#额外注意-认证与授权" aria-label="Permalink to “额外注意：认证与授权”">​</a></h3><p>部分 API 需 “身份验证”（如 API 密钥、Token），仅授权用户可访问。例如：</p><ul><li>请求头中携带密钥：<code>headers={&quot;Authorization&quot;: &quot;Bearer your_token&quot;}</code></li><li>官方文档会明确认证方式（如 API Key、OAuth2.0）。</li></ul><h2 id="三、用-python-调用-api-的实战步骤" tabindex="-1">三、用 Python 调用 API 的实战步骤 <a class="header-anchor" href="#三、用-python-调用-api-的实战步骤" aria-label="Permalink to “三、用 Python 调用 API 的实战步骤”">​</a></h2><p>API 基于 HTTP 协议，可直接用<code>requests</code>库发送请求，步骤如下：</p><h3 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to “1. 准备工作”">​</a></h3><ul><li><p>查看官方 API 文档，确认端点、请求方法、参数；</p></li><li><p>导入所需库（<code>requests</code>用于发请求，<code>json</code>用于解析响应）：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h3 id="_2-发送-api-请求-以get为例" tabindex="-1">2. 发送 API 请求（以<code>GET</code>为例） <a class="header-anchor" href="#_2-发送-api-请求-以get为例" aria-label="Permalink to “2. 发送 API 请求（以GET为例）”">​</a></h3><p>以 “获取 V2EX 热门主题” 为例：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. API端点（从文档获取）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.v2ex.com/api/topics/hot.json&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 发送GET请求（若需查询参数，可加params参数）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 判断请求是否成功（2xx状态码表示成功）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.status_code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.status_code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请求成功！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 4. 解析JSON响应（response.text是JSON字符串）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json.loads(response.text)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转为Python列表/字典</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请求失败，状态码：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response.status_code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_3-提取目标数据" tabindex="-1">3. 提取目标数据 <a class="header-anchor" href="#_3-提取目标数据" aria-label="Permalink to “3. 提取目标数据”">​</a></h3><p>解析后的<code>data</code>是列表 / 字典，直接用 Python 语法提取信息：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提取第3个热门主题的标题和内容（索引从0开始，索引2对应第3个）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">third_topic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;第3个热门主题标题：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, third_topic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;第3个热门主题内容：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, third_topic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="四、api-vs-爬虫-核心优势" tabindex="-1">四、API vs 爬虫：核心优势 <a class="header-anchor" href="#四、api-vs-爬虫-核心优势" aria-label="Permalink to “四、API vs 爬虫：核心优势”">​</a></h2><p>相比爬虫，API 是更优的选择，核心优势如下：</p><table tabindex="0"><thead><tr><th>对比维度</th><th>API</th><th>爬虫</th></tr></thead><tbody><tr><td><strong>可靠性</strong></td><td>官方提供，不受网页外观更新影响</td><td>网页结构变化（如标签改 class）则失效</td></tr><tr><td><strong>数据解析难度</strong></td><td>结构化格式（JSON/XML），直接转列表 / 字典</td><td>需从 HTML 中定位标签（如 Beautiful Soup），易出错</td></tr><tr><td><strong>合规性</strong></td><td>官方允许，合法合规</td><td>可能违反网站使用条款（如反爬规则）</td></tr><tr><td><strong>数据完整性</strong></td><td>可能提供网页未显示的隐藏数据</td><td>仅能获取网页可见内容</td></tr><tr><td><strong>效率</strong></td><td>请求直接返回目标数据，速度快</td><td>需下载完整 HTML，解析步骤多</td></tr></tbody></table><h2 id="五、为什么还要学爬虫" tabindex="-1">五、为什么还要学爬虫？ <a class="header-anchor" href="#五、为什么还要学爬虫" aria-label="Permalink to “五、为什么还要学爬虫？”">​</a></h2><p>API 虽好，但并非万能：</p><ol><li><strong>并非所有网站都提供 API</strong>：多数中小型网站或小众服务无官方 API；</li><li><strong>API 可能有限制</strong>：即使有 API，部分关键数据（如付费内容）可能不开放；</li><li><strong>API 可能有调用门槛</strong>：部分 API 需申请密钥、限制调用频率（如每日 1000 次）。</li></ol><p>因此，<strong>API 是首选，但爬虫仍是必要补充</strong>—— 当 API 不可用时，爬虫是获取数据的备选方案。</p><p>通过 API 获取数据，能规避爬虫的诸多痛点，是企业和开发者的主流选择。掌握 API 调用，可大幅提升数据获取的效率与可靠性。</p>`,39)])])}const g=i(e,[["render",l]]);export{E as __pageData,g as default};
