import{_ as t,c as r,o as a,ah as s}from"./chunks/framework.D5cOWG0Y.js";const _=JSON.parse('{"title":"Redis延迟队列","description":"","frontmatter":{"title":"Redis延迟队列","tags":["Redis"],"categories":["Redis"]},"headers":[],"relativePath":"Redis/Redis基础/5_Redis延迟队列.md","filePath":"Redis/Redis基础/5_Redis延迟队列.md","lastUpdated":1756054686000}'),o={name:"Redis/Redis基础/5_Redis延迟队列.md"};function n(p,e,i,l,d,h){return a(),r("div",null,[...e[0]||(e[0]=[s('<blockquote><p>本文代码：<a href="https://github.com/Daneliya/springboot_chowder/tree/main/springboot_redisson" target="_blank" rel="noreferrer">springboot_chowder/springboot_redisson at main · Daneliya/springboot_chowder (github.com)</a></p></blockquote><p>具体示例</p><p><a href="https://blog.csdn.net/qq_43163943/article/details/120493022" target="_blank" rel="noreferrer">redis作延迟队列简单实现_redisdelayqueuehandle-CSDN博客</a></p><p>redis安装 <a href="https://blog.csdn.net/Biteht/article/details/128548659" target="_blank" rel="noreferrer">https://blog.csdn.net/Biteht/article/details/128548659</a></p><p>redis延迟队列的几种方式 <code>KeyExpirationEventMessageListener</code>是Spring Data Redis中的监听器，用于监听Redis中Key的过期事件。 Redis使用一种称为“过期事件（expiry event）”的机制来处理键的过期。当一个键的过期时间到达时，Redis会生成一个事件，通知订阅了该事件的客户端 使用<code>ZSET</code>（有序集合，Sorted Set）来实现延迟任务调度（如订单超时取消）是一种有效的方法 使用 Redisson 创建延迟队列。Redisson 提供了 <code>RDelayedQueue</code> 接口和 <code>RQueue</code> 接口来实现延迟队列。</p><p>单节点及集群配置</p><p><a href="https://www.cnblogs.com/ming-blogs/p/16268515.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/ming-blogs/p/16268515.html</a></p><p>redis实现延时队列的两种方式</p><p><a href="https://blog.csdn.net/qq_36268452/article/details/113392170" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_36268452/article/details/113392170</a></p><p>详解！基于Redis解决业务场景中延迟队列的应用实践,你不得不服啊</p><p><a href="https://zhuanlan.zhihu.com/p/187137027" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/187137027</a></p><p>基于Redisson实现延迟队列</p><p><a href="https://www.jianshu.com/p/a1b3aa87f78b" target="_blank" rel="noreferrer">https://www.jianshu.com/p/a1b3aa87f78b</a></p><p>分布式锁</p><p><a href="https://www.cnblogs.com/cjsblog/p/11273205.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/cjsblog/p/11273205.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/343811173" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/343811173</a></p><p><a href="https://www.jianshu.com/p/8853b34f7c8b" target="_blank" rel="noreferrer">https://www.jianshu.com/p/8853b34f7c8b</a></p><p><a href="https://zhuanlan.zhihu.com/p/548827425" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/548827425</a></p><p>java.lang.AbstractMethodError: org.redisson.spring.data.connection.RedissonReactiveRedisConnection.close()V</p><p>报错原因：spring boot版本和<a href="https://so.csdn.net/so/search?q=redission&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">redission</a>版本不兼容 报错版本：spring boot 2.0.5 &lt;--&gt; redission 3.12.5</p>',20)])])}const b=t(o,[["render",n]]);export{_ as __pageData,b as default};
