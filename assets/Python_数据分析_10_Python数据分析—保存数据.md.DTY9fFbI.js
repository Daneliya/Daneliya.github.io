import{_ as s,c as i,o as a,ah as e}from"./chunks/framework.D5cOWG0Y.js";const o=JSON.parse('{"title":"Python数据分析—保存数据","description":"","frontmatter":{"title":"Python数据分析—保存数据","tags":["Python"],"categories":["Python"]},"headers":[],"relativePath":"Python/数据分析/10_Python数据分析—保存数据.md","filePath":"Python/数据分析/10_Python数据分析—保存数据.md","lastUpdated":1755802517000}'),l={name:"Python/数据分析/10_Python数据分析—保存数据.md"};function n(h,t,d,r,p,k){return a(),i("div",null,[...t[0]||(t[0]=[e(`<p>当完成数据清洗后，可以把干净整洁的版本先保存一下，假如会进行多次数据分析，可以有效节约下一次分析的时间，因为不需要再重复评估和清洗步骤了。</p><p>保存数据，本质上就是把DataFrame，写入到一个新建的空白文件里。</p><h2 id="写入csv文件" tabindex="-1">写入CSV文件 <a class="header-anchor" href="#写入csv文件" aria-label="Permalink to “写入CSV文件”">​</a></h2><p>DataFrame的<code>to_csv</code>方法，参数传入文件路径，调用后就能把DataFrame转换成CSV格式，并且保存在路径对应的文件里面。</p><p><strong>如果那个文件本身不存在，新文件会自动帮我们创建出来；</strong></p><p><strong>但如果路径对应的文件已经存在，方法运行后，就会把原始内容给覆盖掉。</strong></p><p><code>to_csv</code>方法，会默认把DataFrame的列名和索引都写入到文件里</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建示例 DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.DataFrame({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;日期&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2022-01-01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2022-01-02&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2022-01-03&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2022-01-04&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;销售额&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;销售人员&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Alice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bob&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Charlie&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;David&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;城市&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;New York&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;San Francisco&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;New York&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;San Francisco&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> df1.rename(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;38H9&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;W9F1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;KD82&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;004U&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><table tabindex="0"><thead><tr><th></th><th style="text-align:left;"><strong>日期</strong></th><th style="text-align:left;"><strong>销售额</strong></th><th style="text-align:left;"><strong>销售人员</strong></th><th style="text-align:left;"><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>38H9</strong></td><td style="text-align:left;">2022-01-01</td><td style="text-align:left;">1000</td><td style="text-align:left;">Alice</td><td style="text-align:left;">New York</td></tr><tr><td><strong>W9F1</strong></td><td style="text-align:left;">2022-01-02</td><td style="text-align:left;">1500</td><td style="text-align:left;">Bob</td><td style="text-align:left;">San Francisco</td></tr><tr><td><strong>KD82</strong></td><td style="text-align:left;">2022-01-03</td><td style="text-align:left;">800</td><td style="text-align:left;">Charlie</td><td style="text-align:left;">New York</td></tr><tr><td><strong>004U</strong></td><td style="text-align:left;">2022-01-04</td><td style="text-align:left;">1200</td><td style="text-align:left;">David</td><td style="text-align:left;">San Francisco</td></tr></tbody></table><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.to_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cleaned_sales_data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cleaned_sales_data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><table tabindex="0"><thead><tr><th></th><th style="text-align:left;"><strong>Unnamed: 0</strong></th><th style="text-align:left;"><strong>日期</strong></th><th style="text-align:left;"><strong>销售额</strong></th><th style="text-align:left;"><strong>销售人员</strong></th><th style="text-align:left;"><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>0</strong></td><td style="text-align:left;">38H9</td><td style="text-align:left;">2022-01-01</td><td style="text-align:left;">1000</td><td style="text-align:left;">Alice</td><td style="text-align:left;">New York</td></tr><tr><td><strong>1</strong></td><td style="text-align:left;">W9F1</td><td style="text-align:left;">2022-01-02</td><td style="text-align:left;">1500</td><td style="text-align:left;">Bob</td><td style="text-align:left;">San Francisco</td></tr><tr><td><strong>2</strong></td><td style="text-align:left;">KD82</td><td style="text-align:left;">2022-01-03</td><td style="text-align:left;">800</td><td style="text-align:left;">Charlie</td><td style="text-align:left;">New York</td></tr><tr><td><strong>3</strong></td><td style="text-align:left;">004U</td><td style="text-align:left;">2022-01-04</td><td style="text-align:left;">1200</td><td style="text-align:left;">David</td><td style="text-align:left;">San Francisco</td></tr></tbody></table><p>以上运行结果是因为，to_csv方法会默认帮我们把索引进行保存，但读取的时候，read_csv不知道那是索引，所以它们又被当成了第一列数据，而且因为这列上面没有名字，列名变成Unnamed: 0，表示那是没有名字的第一列。</p><p>调整方法</p><h3 id="_1、默认to-csv和read-csv后" tabindex="-1">1、默认to_csv和read_csv后 <a class="header-anchor" href="#_1、默认to-csv和read-csv后" aria-label="Permalink to “1、默认to_csv和read_csv后”">​</a></h3><p>先调用清理数据中所学的rename方法，给列换一个有意义的名字</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df.rename(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Unnamed: 0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;销售ID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">inplace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table tabindex="0"><thead><tr><th></th><th style="text-align:left;"><strong>销售ID</strong></th><th style="text-align:left;"><strong>日期</strong></th><th style="text-align:left;"><strong>销售额</strong></th><th style="text-align:left;"><strong>销售人员</strong></th><th style="text-align:left;"><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>0</strong></td><td style="text-align:left;">38H9</td><td style="text-align:left;">2022-01-01</td><td style="text-align:left;">1000</td><td style="text-align:left;">Alice</td><td style="text-align:left;">New York</td></tr><tr><td><strong>1</strong></td><td style="text-align:left;">W9F1</td><td style="text-align:left;">2022-01-02</td><td style="text-align:left;">1500</td><td style="text-align:left;">Bob</td><td style="text-align:left;">San Francisco</td></tr><tr><td><strong>2</strong></td><td style="text-align:left;">KD82</td><td style="text-align:left;">2022-01-03</td><td style="text-align:left;">800</td><td style="text-align:left;">Charlie</td><td style="text-align:left;">New York</td></tr><tr><td><strong>3</strong></td><td style="text-align:left;">004U</td><td style="text-align:left;">2022-01-04</td><td style="text-align:left;">1200</td><td style="text-align:left;">David</td><td style="text-align:left;">San Francisco</td></tr></tbody></table><p>然后调用<code>set_index</code>方法，把那一列设置为DataFrame的索引</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df.set_index(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;销售ID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">inplace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table tabindex="0"><thead><tr><th></th><th><strong>日期</strong></th><th><strong>销售额</strong></th><th><strong>销售人员</strong></th><th><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>销售ID</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>38H9</strong></td><td>2022-01-01</td><td>1000</td><td>Alice</td><td>New York</td></tr><tr><td><strong>W9F1</strong></td><td>2022-01-02</td><td>1500</td><td>Bob</td><td>San Francisco</td></tr><tr><td><strong>KD82</strong></td><td>2022-01-03</td><td>800</td><td>Charlie</td><td>New York</td></tr><tr><td><strong>004U</strong></td><td>2022-01-04</td><td>1200</td><td>David</td><td>San Francisco</td></tr></tbody></table><h3 id="_2、写入csv文件时-不保存dataframe的索引" tabindex="-1">2、写入CSV文件时，不保存DataFrame的索引 <a class="header-anchor" href="#_2、写入csv文件时-不保存dataframe的索引" aria-label="Permalink to “2、写入CSV文件时，不保存DataFrame的索引”">​</a></h3><p>to_csv方法，放入可选参数<code>index=False</code>，写入时会自动忽略索引</p><p><strong>如果DataFrame的索引，只是位置索引，一般我们不会专门写入，也就是说会指定</strong><code>**index=False**</code><strong>；但如果是有关键信息的标签索引，就写入到CSV文件里</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df1.to_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cleaned_sales_data2.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df_without_index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cleaned_sales_data2.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df_without_index</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><table tabindex="0"><thead><tr><th></th><th style="text-align:left;"><strong>日期</strong></th><th style="text-align:left;"><strong>销售额</strong></th><th style="text-align:left;"><strong>销售人员</strong></th><th style="text-align:left;"><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>0</strong></td><td style="text-align:left;">2022-01-01</td><td style="text-align:left;">1000</td><td style="text-align:left;">Alice</td><td style="text-align:left;">New York</td></tr><tr><td><strong>1</strong></td><td style="text-align:left;">2022-01-02</td><td style="text-align:left;">1500</td><td style="text-align:left;">Bob</td><td style="text-align:left;">San Francisco</td></tr><tr><td><strong>2</strong></td><td style="text-align:left;">2022-01-03</td><td style="text-align:left;">800</td><td style="text-align:left;">Charlie</td><td style="text-align:left;">New York</td></tr><tr><td><strong>3</strong></td><td style="text-align:left;">2022-01-04</td><td style="text-align:left;">1200</td><td style="text-align:left;">David</td><td style="text-align:left;">San Francisco</td></tr></tbody></table><h3 id="_3、可选参数index-col-0" tabindex="-1">3、可选参数index_col=0 <a class="header-anchor" href="#_3、可选参数index-col-0" aria-label="Permalink to “3、可选参数index_col=0”">​</a></h3><p>读取CSV文件时，放入可选参数<code>index_col=0</code>，表示把CSV第一列数据作为索引</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cleaned_sales_data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index_col</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cleaned_df2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table tabindex="0"><thead><tr><th></th><th style="text-align:left;"><strong>日期</strong></th><th style="text-align:left;"><strong>销售额</strong></th><th style="text-align:left;"><strong>销售人员</strong></th><th style="text-align:left;"><strong>城市</strong></th></tr></thead><tbody><tr><td><strong>38H9</strong></td><td style="text-align:left;">2022-01-01</td><td style="text-align:left;">1000</td><td style="text-align:left;">Alice</td><td style="text-align:left;">New York</td></tr><tr><td><strong>W9F1</strong></td><td style="text-align:left;">2022-01-02</td><td style="text-align:left;">1500</td><td style="text-align:left;">Bob</td><td style="text-align:left;">San Francisco</td></tr><tr><td><strong>KD82</strong></td><td style="text-align:left;">2022-01-03</td><td style="text-align:left;">800</td><td style="text-align:left;">Charlie</td><td style="text-align:left;">New York</td></tr><tr><td><strong>004U</strong></td><td style="text-align:left;">2022-01-04</td><td style="text-align:left;">1200</td><td style="text-align:left;">David</td><td style="text-align:left;">San Francisco</td></tr></tbody></table><h2 id="数据评估和清洗整体流程" tabindex="-1">数据评估和清洗整体流程 <a class="header-anchor" href="#数据评估和清洗整体流程" aria-label="Permalink to “数据评估和清洗整体流程”">​</a></h2><p><strong>下载数据；</strong></p><p><strong>读取数据；</strong></p><p><strong>评估数据；</strong></p><p><strong>根据对数据的评估，指定清洗的步骤；清洗数据；每清洗一步，就再次查看清洗后的数据，来确保问题已经解决；</strong></p><p><strong>保存清洗后的数据</strong></p><p>在Jupyter Notebook里进行数据清晰，并以报告的形式呈现内容。</p><p>运用标题，使内容结构清晰；</p><p>运用Markdown对代码进行注释，方便读者理解；</p><p>并且运用Markdown，总结评估结论，使内容逻辑清晰。</p><h3 id="_1、下载数据" tabindex="-1">1、下载数据 <a class="header-anchor" href="#_1、下载数据" aria-label="Permalink to “1、下载数据”">​</a></h3><ol><li>每次清洗数据项目开始前，都新建一个新的文件夹，将数据文件和Jupyter Notebook放入。</li></ol><p>这样可以保持文件结构的整洁；数据文件和Jupyter Notebook放入同一文件夹，也方便读取</p><ol><li>对于公开数据集，我们并不了解它的背景，在正式分析前，最好了解一下它的介绍，和数据每列的含义。</li></ol><h3 id="_2、读取数据" tabindex="-1">2、读取数据 <a class="header-anchor" href="#_2、读取数据" aria-label="Permalink to “2、读取数据”">​</a></h3><h3 id="_3、评估数据" tabindex="-1">3、评估数据 <a class="header-anchor" href="#_3、评估数据" aria-label="Permalink to “3、评估数据”">​</a></h3><h4 id="_1-缺失数据" tabindex="-1">1）缺失数据 <a class="header-anchor" href="#_1-缺失数据" aria-label="Permalink to “1）缺失数据”">​</a></h4><p>发现缺失数据后，需要深入探索缺失数据：应把该变量存在缺失的观察值，筛选出来，进一步观察数据特征，(提出猜测，验证猜测)</p><h4 id="_2-重复数据" tabindex="-1">2）重复数据 <a class="header-anchor" href="#_2-重复数据" aria-label="Permalink to “2）重复数据”">​</a></h4><p>首先判断哪些变量不应该重复，再去评估数据。</p><p><strong>唯一标识符不一定不能重复，具体数据具体分析</strong></p><h4 id="_3-不一致数据" tabindex="-1">3）不一致数据 <a class="header-anchor" href="#_3-不一致数据" aria-label="Permalink to “3）不一致数据”">​</a></h4><p>先观察哪个变量可以判断是否存在不一致数据，再去评估数据。</p><h4 id="_4-无效-错误数据" tabindex="-1">4）无效/错误数据 <a class="header-anchor" href="#_4-无效-错误数据" aria-label="Permalink to “4）无效/错误数据”">​</a></h4><p>先观察哪个变量可以判断是否存在不一致数据。</p><p>然后通过某些方法，结合常识，评估无效/错误数据。</p><p>最后，与缺失数据一样，发现无效/错误数据后，需要深入探索无效/错误数据：应把该变量无效/错误的观察值，筛选出来，进一步观察数据特征，(提出猜测，验证猜测)</p><h3 id="_4、根据对数据的评估-指定清洗的步骤" tabindex="-1">4、根据对数据的评估，指定清洗的步骤 <a class="header-anchor" href="#_4、根据对数据的评估-指定清洗的步骤" aria-label="Permalink to “4、根据对数据的评估，指定清洗的步骤”">​</a></h3><h4 id="清洗数据" tabindex="-1">清洗数据 <a class="header-anchor" href="#清洗数据" aria-label="Permalink to “清洗数据”">​</a></h4><ol><li>在清洗前，先创建一个新变量，用于储存清洗过程中的数据。</li></ol><p>这样原始的数据和经过清理的数据，分别储存在两个变量中</p><ol start="2"><li>清洗数据过程中，遇到现学处理方法无法很好清理数据的情况，可以查询官方文档或查询搜索引擎。</li></ol><h4 id="每清洗一步-就再次查看清洗后的数据-来确保问题已经解决" tabindex="-1">每清洗一步，就再次查看清洗后的数据，来确保问题已经解决 <a class="header-anchor" href="#每清洗一步-就再次查看清洗后的数据-来确保问题已经解决" aria-label="Permalink to “每清洗一步，就再次查看清洗后的数据，来确保问题已经解决”">​</a></h4><h3 id="_5、保存清洗后的数据" tabindex="-1">5、保存清洗后的数据 <a class="header-anchor" href="#_5、保存清洗后的数据" aria-label="Permalink to “5、保存清洗后的数据”">​</a></h3><p>新的CSV文件名，可以是在原始CSV文件名后面，添加<code>&#39;_cleaned&#39;</code>。</p><h2 id="分享到github" tabindex="-1">分享到GitHub <a class="header-anchor" href="#分享到github" aria-label="Permalink to “分享到GitHub”">​</a></h2><p>Notebook文件格式不方便直接分享</p><p>用文本编辑器打开，文本内容并不直观，也不可读。</p><p>notebook文件需要用Jupyter Notebook或代码编辑器打开；或者把notebook上传到GitHub，然后分享项目链接，因为GitHub能直接渲染Notebook的内容并进行展示。</p><p>GitHub是世界上最大的代码托管网站，和开源社区。可以在上面管理代码和追踪代码历史记录，也可以在上面搜索和查看无数其它开发者的项目代码</p><h3 id="一-、创建代码仓库" tabindex="-1">(一)、创建代码仓库 <a class="header-anchor" href="#一-、创建代码仓库" aria-label="Permalink to “(一)、创建代码仓库”">​</a></h3><ol><li>license</li></ol><p>也就是软件许可证，是用来规定和限制用户，使用这个仓库里面的代码的权利的。</p><p>不同许可证的含义：<a href="https://choosealicense.com/" target="_blank" rel="noreferrer">https://choosealicense.com/</a></p><h3 id="二-、git" tabindex="-1">(二)、Git <a class="header-anchor" href="#二-、git" aria-label="Permalink to “(二)、Git”">​</a></h3><ol><li>Git是GitHub背后的版本控制系统，git可以记录项目每次做了什么改动，是由谁改动的，也可以随时切换到之前某个版本的状态</li><li>学习Git命令：<a href="https://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noreferrer">https://www.runoob.com/git/git-tutorial.html</a></li></ol>`,75)])])}const E=s(l,[["render",n]]);export{o as __pageData,E as default};
