import{_ as l,c as t,o as s,ah as i,j as a,oe as n,of as r,og as o}from"./chunks/framework.D5cOWG0Y.js";const f=JSON.parse('{"title":"Python数据分析","description":"","frontmatter":{"title":"Python数据分析","tags":["Python"],"categories":["Python"]},"headers":[],"relativePath":"Python/数据分析/1_Python数据分析.md","filePath":"Python/数据分析/1_Python数据分析.md","lastUpdated":1755802517000}'),h={name:"Python/数据分析/1_Python数据分析.md"},p={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.018ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.171ex",height:"3.167ex",role:"img",focusable:"false",viewBox:"0 -950 5379.6 1400","aria-hidden":"true"},T={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.383ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.224ex",height:"2.398ex",role:"img",focusable:"false",viewBox:"0 -890.8 1425 1060","aria-hidden":"true"},m={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.25ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.466ex",height:"2.851ex",role:"img",focusable:"false",viewBox:"0 -1149.7 3300.1 1260","aria-hidden":"true"},c={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.016ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.164ex",height:"4.864ex",role:"img",focusable:"false",viewBox:"0 -1259 2724.4 2150","aria-hidden":"true"};function u(g,e,y,x,E,_){return s(),t("div",null,[e[8]||(e[8]=i('<h2 id="jupyter-notebook介绍" tabindex="-1">Jupyter Notebook介绍 <a class="header-anchor" href="#jupyter-notebook介绍" aria-label="Permalink to “Jupyter Notebook介绍”">​</a></h2><h3 id="一、定义" tabindex="-1">一、定义 <a class="header-anchor" href="#一、定义" aria-label="Permalink to “一、定义”">​</a></h3><p>Jupyter Notebook是一个基于网页的交互式计算环境，是数据分析、数据科学，甚至机器学习领域里非常流行的一款工具。</p><p>可以用来编写代码、运行代码、查看输出、可视化数据，并分享输出的报告文档。</p><h3 id="二、优点" tabindex="-1">二、优点 <a class="header-anchor" href="#二、优点" aria-label="Permalink to “二、优点”">​</a></h3><h4 id="_1、jupyter-notebook可以按单元格运行代码" tabindex="-1">1、Jupyter Notebook可以按单元格运行代码 <a class="header-anchor" href="#_1、jupyter-notebook可以按单元格运行代码" aria-label="Permalink to “1、Jupyter Notebook可以按单元格运行代码”">​</a></h4><p>对于搞数据的人来说，不是所有时候都想从头运行到结尾，比如数据量特别大的时候，假如读取数据要等几秒，清洗数据要等几秒，那在我们每次修改分析公式，想反复运行看效果的时候，不希望前面没有改动的步骤，比如说读取数据，还要反复被运行，因为这会浪费很多等待时间。</p><p>用Jupyter Notebook就很简单了，我们可以把不同步骤放在不同单元格里，每次运行一个单元格的代码，这样我们可以只读取一遍数据，当反复修改和运行分析代码时，读数据的代码就不会再被运行了。</p><h4 id="_2、可展示的信息格式更丰富" tabindex="-1">2、可展示的信息格式更丰富 <a class="header-anchor" href="#_2、可展示的信息格式更丰富" aria-label="Permalink to “2、可展示的信息格式更丰富”">​</a></h4><p>我们用常规编辑器时，注释和代码一样都是纯文本，但分析数据时，有时需要记录和解释更多东西，比如数据的背景、使用的公式、分析思路等等。</p><p>用Jupyter Notebook可以用Markdown标记语言，让注释更加清晰、有层次，还可以用LaTex插入公式。</p><p>当你把Jupyter Notebook上的内容，以HTML等格式分享给其他人的时候，这些效果丰富的文字，也会原封不动地展示给对方，帮助对方更好地理解你思考和分析的过程，也节约了你解答疑问的时间。</p><h4 id="_3、交互式运行环境" tabindex="-1">3、交互式运行环境 <a class="header-anchor" href="#_3、交互式运行环境" aria-label="Permalink to “3、交互式运行环境”">​</a></h4><p>交互模式相比命令行模式的好处是，当我们想查看输出的时候，不需要加上打印语句就能看到。</p><p>那我们就可以很方便地查看变量的值,输出中间结果，有利于快速探索数据，试验不同分析方法。</p><h2 id="jupyter-notebook安装" tabindex="-1">Jupyter Notebook安装 <a class="header-anchor" href="#jupyter-notebook安装" aria-label="Permalink to “Jupyter Notebook安装”">​</a></h2><p>命令行下使用命令安装<code>pip install notebook</code></p><p>macos使用<code>pip3 install notebook</code></p><p>安装完成后，运行启动命令<code>jupyter notebook</code>，会自动在浏览器打开一个窗口</p><p><img src="'+n+'" alt="" loading="lazy"></p><p>jupyter notebook界面</p><p><img src="'+r+'" alt="" loading="lazy"></p><h2 id="jupyter-notebook使用" tabindex="-1">Jupyter Notebook使用 <a class="header-anchor" href="#jupyter-notebook使用" aria-label="Permalink to “Jupyter Notebook使用”">​</a></h2><h3 id="一、启动jupyter-notebook" tabindex="-1">一、启动Jupyter Notebook <a class="header-anchor" href="#一、启动jupyter-notebook" aria-label="Permalink to “一、启动Jupyter Notebook”">​</a></h3><ol><li>启动 <ol><li>Windows系统，在菜单栏搜索CMD，点击命令提示符。</li><li>macOS系统，点击顶部菜单栏的放大镜，输入&quot;终端&quot;或&quot;terminal&quot;，回车进入。</li><li>出现大黑窗口后，输入Jupyter Notebook的启动命令：&quot;Jupyter-Notebook&quot;。</li><li>默认浏览器会自动打开一个网页，展示Notebook的主面板。</li></ol></li><li>如果不小心关闭了JN的网页，地址可以再CMD或终端里找到，其中某一行：&quot;The Jupyter Notebook is running at...&quot;，后面跟着的就是页面地址，复制到浏览器即可。</li><li>接下来的时间里，记得不要关闭这个输入了启动命令的CMD或终端，否则JN会被终止。</li></ol><h3 id="二、创建jupyter-notebook文件" tabindex="-1">二、创建Jupyter Notebook文件 <a class="header-anchor" href="#二、创建jupyter-notebook文件" aria-label="Permalink to “二、创建Jupyter Notebook文件”">​</a></h3><h4 id="_1、创建文件" tabindex="-1">1、创建文件 <a class="header-anchor" href="#_1、创建文件" aria-label="Permalink to “1、创建文件”">​</a></h4><p>希望文件在什么位置，就点进那个文件夹，然后点击New，Notebook，一个新的编辑界面就会被打开，而且在桌面上也能看到一个全新的文件出现了。</p><h4 id="_2、重命名文件" tabindex="-1">2、重命名文件 <a class="header-anchor" href="#_2、重命名文件" aria-label="Permalink to “2、重命名文件”">​</a></h4><p>在编辑界面，点下标题，输入想要的名字。</p><h3 id="三、jupyter-notebook编辑界面" tabindex="-1">三、Jupyter Notebook编辑界面 <a class="header-anchor" href="#三、jupyter-notebook编辑界面" aria-label="Permalink to “三、Jupyter Notebook编辑界面”">​</a></h3><p>标题下面分别是菜单栏、工具条以及单元格。</p><p>工具条就是把菜单栏里一些最常用的操作摆出来，所以大部分时候我们只需要通过工具条和单元格打交道，单元格主要用来写Python代码和文字。</p><h4 id="一-、编辑模式和命令模式" tabindex="-1">(一)、编辑模式和命令模式 <a class="header-anchor" href="#一-、编辑模式和命令模式" aria-label="Permalink to “(一)、编辑模式和命令模式”">​</a></h4><h5 id="_1、编辑模式" tabindex="-1">1、编辑模式 <a class="header-anchor" href="#_1、编辑模式" aria-label="Permalink to “1、编辑模式”">​</a></h5><p>在我们点击单元格里面后，外框会变成绿色，表示当前是编辑模式，</p><h5 id="_2、命令模式" tabindex="-1">2、命令模式 <a class="header-anchor" href="#_2、命令模式" aria-label="Permalink to “2、命令模式”">​</a></h5><p>完成输入后，点Esc键，或者鼠标点下其它地方，外框会变成蓝色，表示当前是命令模式</p><h4 id="二-、工具栏" tabindex="-1">(二)、工具栏 <a class="header-anchor" href="#二-、工具栏" aria-label="Permalink to “(二)、工具栏”">​</a></h4><p><img src="'+o+`" alt="" loading="lazy"></p><ol><li>第一个按钮，表示保存文件内容。</li><li>第二个加号按钮，表示在当前选中的单元格下面，新建一个单元格。</li><li>接下来三个按钮，分别表示剪切选中的单元格、复制选中的单元格，以及粘贴选中的单元格，还可以按住Shift键选中多个单元格，然后同一进行操作。</li><li>上箭头表示把选中的单元格往上移动一格，下箭头表示往下移动一格，来更改单元格顺序。</li><li>运行按钮 <ol><li>会执行这个单元格里面所有Python代码。</li><li>执行时，左边方括号会展示星号，表示正在运行。</li><li>执行完毕后，方括号里面会变成数字。</li><li>数字表示的是执行顺序，比如运行完第一个单元格后，旁边数字显示1；继续运行下一个单元格，旁边数字就会显示2。</li><li>JN很灵活的一点是，你可以用任意顺序运行单元格 <ol><li>比如可以运行第三格后，回到第一格再执行一遍；也可以多次反复运行同一个单元格。旁边的数字，会帮忙记录和告知执行过的顺序。</li></ol></li><li>顺序是很关键的 <ol><li>比如你分别在第二和第三个单元格里，写了读取和查看数据的代码，想要修改读取的文件，需要修改和再次运行读取数据的代码。</li><li>这时，第二个单元格的数字大于第三个单元格，就能侧面提醒我们，第二个单元格里，查看数据来输出的代码还没有被更新，查看的还是之前的数据文件。</li><li>所以应该把第三个单元格也运行一次。</li><li>另：代码单元格里的代码是通过交互模式运行的，也就是说可以不需要print语句，就能直接看到执行输出的结果。</li><li>但是如果单元格里有多条输出语句，只有最后一项的输出会被展示，我们还是要借助print，才能同时展示多项输出结果。</li></ol></li></ol></li><li>终止执行按钮 <ol><li>执行单元格里代码的过程中，想要中断的话，就可以点击它。</li></ol></li><li>重启按钮 <ol><li>这会帮我们清空所有定义过的变量，而且单元格旁边的数字也会重新从1开始，表明重启过。</li><li>举个例子，假如第一格定义了一个变量，第二格输出这个变量的值，那运行第一格后变量的值就已经被储存到内存里了，每次输出第二格就会输出对应的值。</li><li>但重启后，再运行第二格，就会提醒我们变量不存在了。</li></ol></li><li>重启并重新运行所有单元格的按钮 <ol><li>非常使用，如果你想看自己写的所有代码，从上往下完整执行一遍的输出，就用这个操作。</li><li>它可以帮我们检查单元格顺序是否有问题。</li></ol></li><li>下拉框，可以让我们切换单元格里的内容。最常用的就是代码和Markdown，单元格并不限于写代码，也可以写文字。 <ol><li>Markdown <ol><li>是一种帮助我们为内容增加样式的标记语言，语法简单。</li><li>通过在前面添加1~6个#和1个空格，可以把文字设置成一至六级标题。</li></ol></li><li>公式 <ol><li>在行内插入公式，就用1个美元符号，包裹住那个公式。</li><li>要插入一个独占一行的公式，就用2个美元符号，包裹住那个公式。</li><li>复杂的公式，可以用LaTex语法来表示。</li></ol></li></ol></li><li>键盘按钮，是快捷键配置 <ol><li>掌握快捷键的使用，可以大大提升我们使用JN的效率，*在命令模式下使用。</li><li>A键，可以在当前单元格上方插入一个新的单元格。</li><li>B键，可以在当前单元格下方插入。</li><li>连按两次D，可以删除当前选中的单元格。</li><li>Shift+Enter，运行当前单元格，并跳到下一个单元格。</li></ol></li></ol><h3 id="三、分享jupyter-notebook" tabindex="-1">三、分享Jupyter Notebook <a class="header-anchor" href="#三、分享jupyter-notebook" aria-label="Permalink to “三、分享Jupyter Notebook”">​</a></h3><h4 id="_1、可以自行编辑和运行" tabindex="-1">1、可以自行编辑和运行 <a class="header-anchor" href="#_1、可以自行编辑和运行" aria-label="Permalink to “1、可以自行编辑和运行”">​</a></h4><p>如果对方使用JN，可以把这个以.ipynb为后缀的文件，直接发给对方。</p><h4 id="_2、只读" tabindex="-1">2、只读 <a class="header-anchor" href="#_2、只读" aria-label="Permalink to “2、只读”">​</a></h4><p>点击File，选择Save and Export Notebook as，有很多选项。</p><p>比如HTML，这是针对网页的标记语言，所以对方可以直接用浏览器打开，所有代码以及Markdown文字都会原封不动得展示出来。</p><h3 id="四、打开之前创建过的jupyter-notebook" tabindex="-1">四、打开之前创建过的Jupyter Notebook <a class="header-anchor" href="#四、打开之前创建过的jupyter-notebook" aria-label="Permalink to “四、打开之前创建过的Jupyter Notebook”">​</a></h3><p>启动JN，进入存放notebook的目录，点击.ipynb的文件。</p><h2 id="markdown语法" tabindex="-1">Markdown语法 <a class="header-anchor" href="#markdown语法" aria-label="Permalink to “Markdown语法”">​</a></h2><h3 id="一、优势" tabindex="-1">一、优势 <a class="header-anchor" href="#一、优势" aria-label="Permalink to “一、优势”">​</a></h3><h4 id="_1、格式比纯文本更丰富" tabindex="-1">1、格式比纯文本更丰富 <a class="header-anchor" href="#_1、格式比纯文本更丰富" aria-label="Permalink to “1、格式比纯文本更丰富”">​</a></h4><p>代码中的注释没法添加任何格式，或添加丰富的信息。</p><p>Markdown支持标题、粗体、引用、列表、代码块等常用格式。</p><h4 id="_2、体积比富文本更轻量" tabindex="-1">2、体积比富文本更轻量 <a class="header-anchor" href="#_2、体积比富文本更轻量" aria-label="Permalink to “2、体积比富文本更轻量”">​</a></h4><p>Word或者一些网站支持的富文本编辑器，可以让我们更改内容样式或排版。但它的功能过于强大多样，让产出文件更加臃肿。</p><p>不支持自定义字体、颜色等操作，所有样式都是通过简单的符号来添加的。因此Markdown文件非常轻量，和纯文本差不了多少。</p><p>代码包的README，文件后缀一般都是.md，说明是一个Markdown文件。</p><h3 id="二、语法" tabindex="-1">二、语法 <a class="header-anchor" href="#二、语法" aria-label="Permalink to “二、语法”">​</a></h3><h4 id="_1、标题" tabindex="-1">1、标题 <a class="header-anchor" href="#_1、标题" aria-label="Permalink to “1、标题”">​</a></h4><p>通过在前面添加1~6个#和1个空格，可以把文字设置成一至六级标题。</p><h4 id="_2、加粗、斜体、删除样式" tabindex="-1">2、加粗、斜体、删除样式 <a class="header-anchor" href="#_2、加粗、斜体、删除样式" aria-label="Permalink to “2、加粗、斜体、删除样式”">​</a></h4><p>用两个*把文字包住，把文字变成粗体。</p><p>用一个*把文字包住，把文字变成斜体。</p><p>用两个~把文字包住，把文字用删除线划掉。*注意是英文输入法下的小波浪。</p><h4 id="_3、普通文字" tabindex="-1">3、普通文字 <a class="header-anchor" href="#_3、普通文字" aria-label="Permalink to “3、普通文字”">​</a></h4><p>不把文字用任何符号包围的话，那就默认是普通的段落文字。</p><p>特点：加的换行，只会在文字之间出现一个空格。</p><p>如果想让文字分隔在不同行，一个方法是多打一次换行，另一个方法是在第一行后面额外加两个空格。</p><h4 id="_4、列表" tabindex="-1">4、列表 <a class="header-anchor" href="#_4、列表" aria-label="Permalink to “4、列表”">​</a></h4><p>无序列表：在每个列表元素前面，加上短横杠、空格&quot;- &quot;。</p><p>有序列表：在每个列表元素前面，加上数字、英文句号、空格&quot;1. &quot;。</p><h4 id="_5、链接" tabindex="-1">5、链接 <a class="header-anchor" href="#_5、链接" aria-label="Permalink to “5、链接”">​</a></h4><p>完整的链接是要带协议名的，比如前面的<code>https://</code></p><p>1）展示链接</p><p>把链接直接像普通文字那样放进去，如果Markdown识别出来这是个链接，就会把它变成可跳转的。</p><p>2）展示链接标题 更直观地告知读者链接指向的内容</p><p>方括号把链接包围起来，在后面紧跟着的括号里面，放上链接。。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">必应</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-light-text-decoration:underline;--shiki-dark:#E1E4E8;--shiki-dark-text-decoration:underline;">[https://cn.bing.com/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)](https://cn.bing.com/))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_6、图片" tabindex="-1">6、图片 <a class="header-anchor" href="#_6、图片" aria-label="Permalink to “6、图片”">​</a></h4><p>方括号里放文字，圆括号里面放图片链接，同时在方括号前面加上一个英文感叹号。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">![</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">城市景观</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-light-text-decoration:underline;--shiki-dark:#E1E4E8;--shiki-dark-text-decoration:underline;">C:/Users/xxl/Downloads/[https:/img0.baidu.com/it/u=25183460,870873689&amp;fm=253</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)](https://img0.baidu.com/it/u=25183460,870873689&amp;fm=253))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>插入图片，方括号里放文字的意义是，如果图片加载不出来的话，就会显示那个文字内容作为替代。</p><h4 id="_7、引用" tabindex="-1">7、引用 <a class="header-anchor" href="#_7、引用" aria-label="Permalink to “7、引用”">​</a></h4><p>插入一个引用段落，用右书名号、空格，后面紧跟着引用内容。</p><p>引用段落里的文字，和普通段落里的文字一样，不会因为你在内容里加了换行，展示效果里就有换行。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">&gt;蒹葭苍苍</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">白露为霜</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_8、代码" tabindex="-1">8、代码 <a class="header-anchor" href="#_8、代码" aria-label="Permalink to “8、代码”">​</a></h4><p>要在文字里插入代码，就用反引号包裹住代码，<code>import math</code></p><p>如果我们要插入独占一段的代码段落，就用三个反引号包裹住代码段落。</p><p>在开头的三个反引号后面，还可以跟上代码语言的名字，这样Markdown就会展示针对那个语言的语法高亮。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">​\`\`\`python</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import math</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">print(&quot;Hello World!&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">print(math.pi)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_9、公式" tabindex="-1">9、公式 <a class="header-anchor" href="#_9、公式" aria-label="Permalink to “9、公式”">​</a></h4><ol><li>在行内插入公式，就用1个$，包裹住那个公式。</li><li>要插入一个独占一行的公式，就用2个$，包裹住那个公式。</li><li>复杂的公式，可以用LaTex语法来表示。</li></ol><h2 id="latex语法" tabindex="-1">LaTeX语法 <a class="header-anchor" href="#latex语法" aria-label="Permalink to “LaTeX语法”">​</a></h2><p>LaTex是一个排版系统，可以负责定义书籍、简历、论文等格式和布局，不局限于数学公式。</p><p>在JN的使用场景里，用LaTex就是为了在Markdown里插入公式，所以只需学会公式相关语法即可</p><h3 id="一、加减乘除" tabindex="-1">一、加减乘除 <a class="header-anchor" href="#一、加减乘除" aria-label="Permalink to “一、加减乘除”">​</a></h3><p>表示加减的符号，就是键盘上的加减。</p><p>乘号和除号是没有的，用<code>\\times</code>表示乘号，<code>\\div</code>表示除号。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$x + y$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$x - y$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$x \\times y$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$x \\div y$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="二、上标下标" tabindex="-1">二、上标下标 <a class="header-anchor" href="#二、上标下标" aria-label="Permalink to “二、上标下标”">​</a></h3><p>要加上标，用插入符<code>^</code>，跟上作为上标的内容；要加下标，用下划线<code>_</code>，后面跟上作为下标的内容。</p><p>LaTex默认上标或下标只包含1位字符，如果想把多个字符作为上标或下标，用花括号把它们组合起来，就可以了</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$x^3$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$H_2O$$ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$S_{input}$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="三、求和求根" tabindex="-1">三、求和求根 <a class="header-anchor" href="#三、求和求根" aria-label="Permalink to “三、求和求根”">​</a></h3><p>求根符号，<code>\\sqrt</code>，后面可以跟上方括号，里面的数字表示求几次方根。</p><p>LaTex默认求根符号的横线只拉到第1个字符，如果对一个长公式求根，可以在方括号后面跟上花括号，把要求根的内容全部包围起来。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$\\sum(x^2 + y^2)$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$\\sqrt[</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]x$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$\\sqrt[</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{a^2m^2}$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,109)),a("mjx-container",p,[(s(),t("svg",d,[...e[0]||(e[0]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1444,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(1833,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(3063.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(4064,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(523,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(4990.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)])])),e[1]||(e[1]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mo",{"data-mjx-texclass":"OP"},"∑"),a("mo",{stretchy:"false"},"("),a("msup",null,[a("mi",null,"x"),a("mn",null,"2")]),a("mo",null,"+"),a("msup",null,[a("mi",null,"y"),a("mn",null,"2")]),a("mo",{stretchy:"false"},")")])],-1))]),a("mjx-container",T,[(s(),t("svg",Q,[...e[2]||(e[2]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mroot"><g><g data-mml-node="mi" transform="translate(853,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mn" transform="translate(261.8,391.8) scale(0.5)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(0,30.8)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z" style="stroke-width:3;"></path></g><rect width="572" height="60" x="853" y="770.8"></rect></g></g></g>',1)])])),e[3]||(e[3]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mroot",null,[a("mi",null,"x"),a("mn",null,"3")])])],-1))]),a("mjx-container",m,[(s(),t("svg",k,[...e[4]||(e[4]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mroot"><g><g data-mml-node="mrow" transform="translate(1020,0)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(562,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msup" transform="translate(965.6,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(911,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mn" transform="translate(362,560.7) scale(0.5)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(0,239.7)"><path data-c="221A" d="M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z" style="stroke-width:3;"></path></g><rect width="2280.1" height="60" x="1020" y="1029.7"></rect></g></g></g>',1)])])),e[5]||(e[5]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mroot",null,[a("mrow",null,[a("msup",null,[a("mi",null,"a"),a("mn",null,"2")]),a("msup",null,[a("mi",null,"m"),a("mn",null,"2")])]),a("mn",null,"3")])])],-1))]),e[9]||(e[9]=i(`<h3 id="四、分数线" tabindex="-1">四、分数线 <a class="header-anchor" href="#四、分数线" aria-label="Permalink to “四、分数线”">​</a></h3><p>用<code>\\frac</code>表示，后面跟着两个花括号，在第一个花括号里面，放分数线上面的内容；在第二个花括号里，放分数线下面的内容。</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$$\\frac{x+y}{x-y}$$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,3)),a("mjx-container",c,[(s(),t("svg",b,[...e[6]||(e[6]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(794.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1794.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(794.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1794.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g><rect width="2484.4" height="60" x="120" y="220"></rect></g></g></g>',1)])])),e[7]||(e[7]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mfrac",null,[a("mrow",null,[a("mi",null,"x"),a("mo",null,"+"),a("mi",null,"y")]),a("mrow",null,[a("mi",null,"x"),a("mo",null,"−"),a("mi",null,"y")])])])],-1))]),e[10]||(e[10]=i('<h3 id="五、其他" tabindex="-1">五、其他 <a class="header-anchor" href="#五、其他" aria-label="Permalink to “五、其他”">​</a></h3><p>除上面之外，LaTex还能搞定其它无数的公式符号，参考官方文档</p><p>其他公式符号语法：<a href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols" target="_blank" rel="noreferrer">https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols</a></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to “参考资料”">​</a></h2><p>原资料：<a href="https://www.bilibili.com/cheese/play/ss2298" target="_blank" rel="noreferrer">https://www.bilibili.com/cheese/play/ss2298</a></p><p>下载资料：<a href="https://www.hezuclub.com/1775.html" target="_blank" rel="noreferrer">https://www.hezuclub.com/1775.html</a></p><p>下载链接：<a href="https://since1982-my.sharepoint.com/personal/hezuclub2024_since1982_org/_layouts/15/onedrive.aspx?ga=1&amp;id=%2Fpersonal%2Fhezuclub2024%5Fsince1982%5Forg%2FDocuments%2FP1775%20%E5%B0%8F%E7%99%BD%E7%8E%A9%E8%BD%ACPython%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E8%AE%AD%E7%BB%83%E8%90%A5&amp;sortField=LinkFilename&amp;isAscending=true" target="_blank" rel="noreferrer">下载链接</a></p><p>代码：<a href="https://github.com/NaturalCutie/Python-Data-Analysis-Notes/tree/main" target="_blank" rel="noreferrer">https://github.com/NaturalCutie/Python-Data-Analysis-Notes/tree/main</a></p>',8))])}const L=l(h,[["render",u]]);export{f as __pageData,L as default};
